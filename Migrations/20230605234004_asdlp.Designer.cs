// <auto-generated />
using System;
using BiebWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiebWebApp.Migrations
{
    [DbContext(typeof(BiebWebAppContext))]
    [Migration("20230605234004_asdlp")]
    partial class asdlp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BiebWebApp.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 63.07m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            Amount = 22.45m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Amount = 66.42m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Amount = 19.59m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Amount = 57.57m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Amount = 50.86m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Amount = 32.19m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            Amount = 43.84m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            Amount = 96.18m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            Amount = 84.80m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            Amount = 15.79m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            Amount = 90.51m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            Amount = 77.27m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            Amount = 99.65m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            Amount = 51.09m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 16,
                            Amount = 12.38m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 17,
                            Amount = 56.43m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 18,
                            Amount = 28.48m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            Amount = 84.72m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 20,
                            Amount = 32.23m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 21,
                            Amount = 53.67m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 22,
                            Amount = 47.03m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 23,
                            Amount = 68.13m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 24,
                            Amount = 68.08m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 25,
                            Amount = 33.27m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 26,
                            Amount = 62.39m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 27,
                            Amount = 80.15m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 28,
                            Amount = 25.95m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 29,
                            Amount = 30.52m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 30,
                            Amount = 99.14m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 31,
                            Amount = 23.52m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 32,
                            Amount = 11.43m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 33,
                            Amount = 41.82m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 34,
                            Amount = 88.72m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 35,
                            Amount = 16.47m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 36,
                            Amount = 81.09m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 37,
                            Amount = 17.13m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 38,
                            Amount = 52.40m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 39,
                            Amount = 59.75m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 40,
                            Amount = 36.68m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 41,
                            Amount = 49.58m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 42,
                            Amount = 58.91m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 43,
                            Amount = 87.69m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 44,
                            Amount = 18.61m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 45,
                            Amount = 68.01m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 46,
                            Amount = 68.95m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 47,
                            Amount = 19.99m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 48,
                            Amount = 39.95m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 49,
                            Amount = 51.91m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 50,
                            Amount = 57.91m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Alejandrin Dickens",
                            ItemType = 1,
                            Location = "South Fredericmouth",
                            Status = 0,
                            Title = "Licensed Soft Table",
                            Year = 2004
                        },
                        new
                        {
                            Id = 2,
                            Author = "Delilah Stanton",
                            ItemType = 2,
                            Location = "East Freddie",
                            Status = 0,
                            Title = "Refined Plastic Chicken",
                            Year = 2005
                        },
                        new
                        {
                            Id = 3,
                            Author = "Liliane Von",
                            ItemType = 1,
                            Location = "West Edgardo",
                            Status = 0,
                            Title = "Refined Concrete Hat",
                            Year = 2021
                        },
                        new
                        {
                            Id = 4,
                            Author = "Dominique Huel",
                            ItemType = 2,
                            Location = "Wildermanfort",
                            Status = 0,
                            Title = "Small Wooden Computer",
                            Year = 2009
                        },
                        new
                        {
                            Id = 5,
                            Author = "Brandyn Ruecker",
                            ItemType = 2,
                            Location = "South Yoshiko",
                            Status = 0,
                            Title = "Practical Plastic Gloves",
                            Year = 2018
                        },
                        new
                        {
                            Id = 6,
                            Author = "Krista Aufderhar",
                            ItemType = 2,
                            Location = "South Kenyon",
                            Status = 0,
                            Title = "Licensed Soft Shirt",
                            Year = 2016
                        },
                        new
                        {
                            Id = 7,
                            Author = "Annabelle Abernathy",
                            ItemType = 3,
                            Location = "Lake Ora",
                            Status = 0,
                            Title = "Ergonomic Rubber Salad",
                            Year = 2009
                        },
                        new
                        {
                            Id = 8,
                            Author = "Arvel Blick",
                            ItemType = 0,
                            Location = "Pietromouth",
                            Status = 0,
                            Title = "Small Soft Tuna",
                            Year = 2003
                        },
                        new
                        {
                            Id = 9,
                            Author = "Emma Renner",
                            ItemType = 0,
                            Location = "Hughmouth",
                            Status = 0,
                            Title = "Rustic Cotton Towels",
                            Year = 2011
                        },
                        new
                        {
                            Id = 10,
                            Author = "Ronny Turcotte",
                            ItemType = 2,
                            Location = "Port Natburgh",
                            Status = 0,
                            Title = "Ergonomic Frozen Salad",
                            Year = 2022
                        },
                        new
                        {
                            Id = 11,
                            Author = "Marvin Halvorson",
                            ItemType = 3,
                            Location = "Effertzfurt",
                            Status = 0,
                            Title = "Rustic Metal Chair",
                            Year = 2023
                        },
                        new
                        {
                            Id = 12,
                            Author = "Raina Windler",
                            ItemType = 1,
                            Location = "Lake Filomena",
                            Status = 0,
                            Title = "Practical Metal Chips",
                            Year = 2018
                        },
                        new
                        {
                            Id = 13,
                            Author = "Jacky Koepp",
                            ItemType = 3,
                            Location = "West Edmond",
                            Status = 0,
                            Title = "Unbranded Steel Shirt",
                            Year = 2006
                        },
                        new
                        {
                            Id = 14,
                            Author = "Jodie Hills",
                            ItemType = 3,
                            Location = "West Waldofurt",
                            Status = 0,
                            Title = "Practical Frozen Tuna",
                            Year = 2001
                        },
                        new
                        {
                            Id = 15,
                            Author = "Ali Steuber",
                            ItemType = 0,
                            Location = "Port Dalebury",
                            Status = 0,
                            Title = "Practical Cotton Shirt",
                            Year = 2007
                        },
                        new
                        {
                            Id = 16,
                            Author = "Lemuel Kuvalis",
                            ItemType = 3,
                            Location = "East Kennithbury",
                            Status = 0,
                            Title = "Unbranded Frozen Bike",
                            Year = 2017
                        },
                        new
                        {
                            Id = 17,
                            Author = "Andrew Wuckert",
                            ItemType = 2,
                            Location = "Ahmedside",
                            Status = 0,
                            Title = "Gorgeous Soft Chicken",
                            Year = 2021
                        },
                        new
                        {
                            Id = 18,
                            Author = "Mekhi Hilll",
                            ItemType = 2,
                            Location = "Howellland",
                            Status = 0,
                            Title = "Intelligent Granite Hat",
                            Year = 2003
                        },
                        new
                        {
                            Id = 19,
                            Author = "Althea Wisoky",
                            ItemType = 1,
                            Location = "Gaylordchester",
                            Status = 0,
                            Title = "Handmade Granite Towels",
                            Year = 2010
                        },
                        new
                        {
                            Id = 20,
                            Author = "Dorothea Haag",
                            ItemType = 0,
                            Location = "Stokesmouth",
                            Status = 0,
                            Title = "Gorgeous Soft Shirt",
                            Year = 2000
                        },
                        new
                        {
                            Id = 21,
                            Author = "Calista Ritchie",
                            ItemType = 2,
                            Location = "Dedrickberg",
                            Status = 0,
                            Title = "Ergonomic Wooden Car",
                            Year = 2016
                        },
                        new
                        {
                            Id = 22,
                            Author = "Orlo West",
                            ItemType = 1,
                            Location = "Davidshire",
                            Status = 0,
                            Title = "Rustic Metal Pants",
                            Year = 2017
                        },
                        new
                        {
                            Id = 23,
                            Author = "Marvin Denesik",
                            ItemType = 0,
                            Location = "Lake Marionview",
                            Status = 0,
                            Title = "Ergonomic Metal Chair",
                            Year = 2023
                        },
                        new
                        {
                            Id = 24,
                            Author = "Beryl Larson",
                            ItemType = 1,
                            Location = "Port Austyn",
                            Status = 0,
                            Title = "Generic Metal Pants",
                            Year = 2005
                        },
                        new
                        {
                            Id = 25,
                            Author = "Lourdes Sporer",
                            ItemType = 0,
                            Location = "Murraystad",
                            Status = 0,
                            Title = "Incredible Cotton Hat",
                            Year = 2012
                        },
                        new
                        {
                            Id = 26,
                            Author = "Conor Hyatt",
                            ItemType = 1,
                            Location = "Queenshire",
                            Status = 0,
                            Title = "Rustic Granite Hat",
                            Year = 2000
                        },
                        new
                        {
                            Id = 27,
                            Author = "Polly Feil",
                            ItemType = 3,
                            Location = "Heaneyview",
                            Status = 0,
                            Title = "Unbranded Concrete Soap",
                            Year = 2016
                        },
                        new
                        {
                            Id = 28,
                            Author = "Juanita Cormier",
                            ItemType = 3,
                            Location = "New Ashlystad",
                            Status = 0,
                            Title = "Awesome Cotton Gloves",
                            Year = 2006
                        },
                        new
                        {
                            Id = 29,
                            Author = "Dagmar Osinski",
                            ItemType = 0,
                            Location = "Borisborough",
                            Status = 0,
                            Title = "Incredible Metal Chips",
                            Year = 2021
                        },
                        new
                        {
                            Id = 30,
                            Author = "Donnie Huel",
                            ItemType = 2,
                            Location = "Torphymouth",
                            Status = 0,
                            Title = "Tasty Wooden Soap",
                            Year = 2009
                        },
                        new
                        {
                            Id = 31,
                            Author = "Guy Littel",
                            ItemType = 2,
                            Location = "Macistad",
                            Status = 0,
                            Title = "Sleek Fresh Pizza",
                            Year = 2010
                        },
                        new
                        {
                            Id = 32,
                            Author = "Mackenzie Oberbrunner",
                            ItemType = 2,
                            Location = "Eldorafurt",
                            Status = 0,
                            Title = "Generic Cotton Shirt",
                            Year = 2008
                        },
                        new
                        {
                            Id = 33,
                            Author = "Casper Beahan",
                            ItemType = 3,
                            Location = "Bergnaumburgh",
                            Status = 0,
                            Title = "Handmade Metal Tuna",
                            Year = 2017
                        },
                        new
                        {
                            Id = 34,
                            Author = "Neal Ferry",
                            ItemType = 0,
                            Location = "Loyburgh",
                            Status = 0,
                            Title = "Tasty Metal Table",
                            Year = 2006
                        },
                        new
                        {
                            Id = 35,
                            Author = "Rosella Bode",
                            ItemType = 0,
                            Location = "Nicolettemouth",
                            Status = 0,
                            Title = "Handcrafted Metal Cheese",
                            Year = 2012
                        },
                        new
                        {
                            Id = 36,
                            Author = "Felicia Batz",
                            ItemType = 1,
                            Location = "Annehaven",
                            Status = 0,
                            Title = "Handmade Granite Tuna",
                            Year = 2007
                        },
                        new
                        {
                            Id = 37,
                            Author = "Serena Goodwin",
                            ItemType = 0,
                            Location = "Dibbertstad",
                            Status = 0,
                            Title = "Refined Metal Mouse",
                            Year = 2009
                        },
                        new
                        {
                            Id = 38,
                            Author = "Sam Grant",
                            ItemType = 2,
                            Location = "Christafort",
                            Status = 0,
                            Title = "Intelligent Rubber Chicken",
                            Year = 2004
                        },
                        new
                        {
                            Id = 39,
                            Author = "Karen Abernathy",
                            ItemType = 2,
                            Location = "McGlynnville",
                            Status = 0,
                            Title = "Refined Fresh Keyboard",
                            Year = 2005
                        },
                        new
                        {
                            Id = 40,
                            Author = "Melvin Schroeder",
                            ItemType = 0,
                            Location = "North Enid",
                            Status = 0,
                            Title = "Fantastic Fresh Fish",
                            Year = 2013
                        },
                        new
                        {
                            Id = 41,
                            Author = "Daphney Tremblay",
                            ItemType = 1,
                            Location = "Elissaland",
                            Status = 0,
                            Title = "Generic Steel Shirt",
                            Year = 2005
                        },
                        new
                        {
                            Id = 42,
                            Author = "Annamae Rolfson",
                            ItemType = 1,
                            Location = "Jerryview",
                            Status = 0,
                            Title = "Awesome Concrete Towels",
                            Year = 2008
                        },
                        new
                        {
                            Id = 43,
                            Author = "Margaret Schmitt",
                            ItemType = 2,
                            Location = "West Jameymouth",
                            Status = 0,
                            Title = "Practical Frozen Chicken",
                            Year = 2020
                        },
                        new
                        {
                            Id = 44,
                            Author = "Nathanial Orn",
                            ItemType = 3,
                            Location = "Jacobiland",
                            Status = 0,
                            Title = "Tasty Soft Hat",
                            Year = 2021
                        },
                        new
                        {
                            Id = 45,
                            Author = "Gilbert Rosenbaum",
                            ItemType = 3,
                            Location = "South Paxtonberg",
                            Status = 0,
                            Title = "Ergonomic Cotton Computer",
                            Year = 2018
                        },
                        new
                        {
                            Id = 46,
                            Author = "Lue Tromp",
                            ItemType = 2,
                            Location = "Reillymouth",
                            Status = 0,
                            Title = "Tasty Wooden Cheese",
                            Year = 2015
                        },
                        new
                        {
                            Id = 47,
                            Author = "Zachary Senger",
                            ItemType = 1,
                            Location = "Laishamouth",
                            Status = 0,
                            Title = "Small Plastic Chicken",
                            Year = 2009
                        },
                        new
                        {
                            Id = 48,
                            Author = "Araceli Lind",
                            ItemType = 3,
                            Location = "Port Roosevelt",
                            Status = 0,
                            Title = "Ergonomic Rubber Bike",
                            Year = 2003
                        },
                        new
                        {
                            Id = 49,
                            Author = "Hortense Block",
                            ItemType = 1,
                            Location = "Port Adan",
                            Status = 0,
                            Title = "Handmade Soft Computer",
                            Year = 2002
                        },
                        new
                        {
                            Id = 50,
                            Author = "Alexandrea Denesik",
                            ItemType = 1,
                            Location = "Jensenstad",
                            Status = 0,
                            Title = "Handmade Concrete Pizza",
                            Year = 2001
                        },
                        new
                        {
                            Id = 51,
                            Author = "Douglas Lang",
                            ItemType = 1,
                            Location = "Angelaview",
                            Status = 0,
                            Title = "Incredible Metal Towels",
                            Year = 2021
                        },
                        new
                        {
                            Id = 52,
                            Author = "Keara Torp",
                            ItemType = 1,
                            Location = "Joeymouth",
                            Status = 0,
                            Title = "Handcrafted Steel Chair",
                            Year = 2005
                        },
                        new
                        {
                            Id = 53,
                            Author = "Ally VonRueden",
                            ItemType = 2,
                            Location = "Rollinton",
                            Status = 0,
                            Title = "Sleek Soft Chair",
                            Year = 2006
                        },
                        new
                        {
                            Id = 54,
                            Author = "Brandyn Quigley",
                            ItemType = 1,
                            Location = "West Leslie",
                            Status = 0,
                            Title = "Refined Steel Shoes",
                            Year = 2023
                        },
                        new
                        {
                            Id = 55,
                            Author = "Ernesto Ullrich",
                            ItemType = 0,
                            Location = "Lake Devan",
                            Status = 0,
                            Title = "Rustic Rubber Hat",
                            Year = 2022
                        },
                        new
                        {
                            Id = 56,
                            Author = "Eda Hane",
                            ItemType = 0,
                            Location = "Port Athena",
                            Status = 0,
                            Title = "Small Plastic Fish",
                            Year = 2018
                        },
                        new
                        {
                            Id = 57,
                            Author = "Jed Gleason",
                            ItemType = 1,
                            Location = "Ritchietown",
                            Status = 0,
                            Title = "Rustic Granite Chair",
                            Year = 2017
                        },
                        new
                        {
                            Id = 58,
                            Author = "Elenora Graham",
                            ItemType = 0,
                            Location = "New Sunnybury",
                            Status = 0,
                            Title = "Handcrafted Cotton Soap",
                            Year = 2013
                        },
                        new
                        {
                            Id = 59,
                            Author = "Alyce Doyle",
                            ItemType = 0,
                            Location = "Considinebury",
                            Status = 0,
                            Title = "Handcrafted Plastic Soap",
                            Year = 2006
                        },
                        new
                        {
                            Id = 60,
                            Author = "Felicity Kilback",
                            ItemType = 3,
                            Location = "Shirleyville",
                            Status = 0,
                            Title = "Sleek Plastic Shoes",
                            Year = 2018
                        },
                        new
                        {
                            Id = 61,
                            Author = "Lisa Harvey",
                            ItemType = 3,
                            Location = "Blakebury",
                            Status = 0,
                            Title = "Licensed Concrete Gloves",
                            Year = 2008
                        },
                        new
                        {
                            Id = 62,
                            Author = "Johanna Frami",
                            ItemType = 2,
                            Location = "Jeradton",
                            Status = 0,
                            Title = "Generic Metal Cheese",
                            Year = 2008
                        },
                        new
                        {
                            Id = 63,
                            Author = "Kacey Hyatt",
                            ItemType = 1,
                            Location = "Naderton",
                            Status = 0,
                            Title = "Gorgeous Rubber Table",
                            Year = 2015
                        },
                        new
                        {
                            Id = 64,
                            Author = "Vivien Cummings",
                            ItemType = 0,
                            Location = "New Brookston",
                            Status = 0,
                            Title = "Ergonomic Frozen Bike",
                            Year = 2021
                        },
                        new
                        {
                            Id = 65,
                            Author = "Paige Walker",
                            ItemType = 0,
                            Location = "Kerlukeland",
                            Status = 0,
                            Title = "Generic Metal Salad",
                            Year = 2014
                        },
                        new
                        {
                            Id = 66,
                            Author = "Mylene O'Reilly",
                            ItemType = 3,
                            Location = "Lake Eleanoraborough",
                            Status = 0,
                            Title = "Ergonomic Soft Chicken",
                            Year = 2018
                        },
                        new
                        {
                            Id = 67,
                            Author = "Kaleigh Thompson",
                            ItemType = 3,
                            Location = "Doloreshaven",
                            Status = 0,
                            Title = "Tasty Metal Table",
                            Year = 2016
                        },
                        new
                        {
                            Id = 68,
                            Author = "Eleanore Tromp",
                            ItemType = 3,
                            Location = "Kittymouth",
                            Status = 0,
                            Title = "Awesome Steel Mouse",
                            Year = 2007
                        },
                        new
                        {
                            Id = 69,
                            Author = "Trace Langworth",
                            ItemType = 2,
                            Location = "Randalberg",
                            Status = 0,
                            Title = "Unbranded Fresh Bacon",
                            Year = 2006
                        },
                        new
                        {
                            Id = 70,
                            Author = "Leland Koss",
                            ItemType = 3,
                            Location = "West Jarrell",
                            Status = 0,
                            Title = "Licensed Steel Shirt",
                            Year = 2006
                        },
                        new
                        {
                            Id = 71,
                            Author = "Louvenia Bogisich",
                            ItemType = 1,
                            Location = "Annastad",
                            Status = 0,
                            Title = "Rustic Plastic Pizza",
                            Year = 2009
                        },
                        new
                        {
                            Id = 72,
                            Author = "Gertrude Osinski",
                            ItemType = 1,
                            Location = "Lake Lazarobury",
                            Status = 0,
                            Title = "Unbranded Granite Fish",
                            Year = 2000
                        },
                        new
                        {
                            Id = 73,
                            Author = "Sarina Ritchie",
                            ItemType = 1,
                            Location = "Hoegerton",
                            Status = 0,
                            Title = "Small Plastic Fish",
                            Year = 2012
                        },
                        new
                        {
                            Id = 74,
                            Author = "Thea Sporer",
                            ItemType = 2,
                            Location = "North Irmaton",
                            Status = 0,
                            Title = "Refined Steel Pizza",
                            Year = 2014
                        },
                        new
                        {
                            Id = 75,
                            Author = "Kelly Keeling",
                            ItemType = 2,
                            Location = "Lisettemouth",
                            Status = 0,
                            Title = "Licensed Frozen Keyboard",
                            Year = 2022
                        },
                        new
                        {
                            Id = 76,
                            Author = "Merle Macejkovic",
                            ItemType = 0,
                            Location = "Blockmouth",
                            Status = 0,
                            Title = "Ergonomic Fresh Shirt",
                            Year = 2017
                        },
                        new
                        {
                            Id = 77,
                            Author = "Virginia Auer",
                            ItemType = 3,
                            Location = "Lake Joanny",
                            Status = 0,
                            Title = "Practical Fresh Bacon",
                            Year = 2010
                        },
                        new
                        {
                            Id = 78,
                            Author = "Celestino Bahringer",
                            ItemType = 1,
                            Location = "Lake Emmanuelview",
                            Status = 0,
                            Title = "Unbranded Frozen Table",
                            Year = 2000
                        },
                        new
                        {
                            Id = 79,
                            Author = "Andreanne O'Kon",
                            ItemType = 3,
                            Location = "South Catalinaport",
                            Status = 0,
                            Title = "Tasty Cotton Pants",
                            Year = 2017
                        },
                        new
                        {
                            Id = 80,
                            Author = "Thea Rau",
                            ItemType = 1,
                            Location = "North Jarodtown",
                            Status = 0,
                            Title = "Awesome Granite Computer",
                            Year = 2018
                        },
                        new
                        {
                            Id = 81,
                            Author = "Lea Hahn",
                            ItemType = 1,
                            Location = "Sabinashire",
                            Status = 0,
                            Title = "Unbranded Granite Towels",
                            Year = 2017
                        },
                        new
                        {
                            Id = 82,
                            Author = "George Armstrong",
                            ItemType = 3,
                            Location = "Reichertstad",
                            Status = 0,
                            Title = "Unbranded Wooden Chips",
                            Year = 2005
                        },
                        new
                        {
                            Id = 83,
                            Author = "Annabelle Ratke",
                            ItemType = 0,
                            Location = "Steuberville",
                            Status = 0,
                            Title = "Handcrafted Concrete Table",
                            Year = 2008
                        },
                        new
                        {
                            Id = 84,
                            Author = "Krystel Smith",
                            ItemType = 0,
                            Location = "Summerfurt",
                            Status = 0,
                            Title = "Awesome Frozen Chicken",
                            Year = 2002
                        },
                        new
                        {
                            Id = 85,
                            Author = "Gideon Hoeger",
                            ItemType = 3,
                            Location = "Port Loyalshire",
                            Status = 0,
                            Title = "Generic Fresh Fish",
                            Year = 2011
                        },
                        new
                        {
                            Id = 86,
                            Author = "Nova Mante",
                            ItemType = 0,
                            Location = "Bartolettifurt",
                            Status = 0,
                            Title = "Gorgeous Steel Fish",
                            Year = 2018
                        },
                        new
                        {
                            Id = 87,
                            Author = "Joannie McGlynn",
                            ItemType = 3,
                            Location = "Bernadettebury",
                            Status = 0,
                            Title = "Sleek Concrete Fish",
                            Year = 2021
                        },
                        new
                        {
                            Id = 88,
                            Author = "Eriberto Strosin",
                            ItemType = 2,
                            Location = "Maximomouth",
                            Status = 0,
                            Title = "Small Steel Chair",
                            Year = 2008
                        },
                        new
                        {
                            Id = 89,
                            Author = "Bertha Jones",
                            ItemType = 0,
                            Location = "Francestown",
                            Status = 0,
                            Title = "Small Steel Keyboard",
                            Year = 2000
                        },
                        new
                        {
                            Id = 90,
                            Author = "Dameon Lindgren",
                            ItemType = 1,
                            Location = "Pasqualeton",
                            Status = 0,
                            Title = "Ergonomic Metal Chicken",
                            Year = 2002
                        },
                        new
                        {
                            Id = 91,
                            Author = "Columbus Feest",
                            ItemType = 3,
                            Location = "Vonfurt",
                            Status = 0,
                            Title = "Rustic Frozen Shoes",
                            Year = 2008
                        },
                        new
                        {
                            Id = 92,
                            Author = "Lessie Mosciski",
                            ItemType = 0,
                            Location = "Bradlybury",
                            Status = 0,
                            Title = "Fantastic Soft Tuna",
                            Year = 2007
                        },
                        new
                        {
                            Id = 93,
                            Author = "Amie Stokes",
                            ItemType = 1,
                            Location = "Casimershire",
                            Status = 0,
                            Title = "Incredible Concrete Cheese",
                            Year = 2018
                        },
                        new
                        {
                            Id = 94,
                            Author = "Ova Frami",
                            ItemType = 1,
                            Location = "Buckridgebury",
                            Status = 0,
                            Title = "Tasty Concrete Fish",
                            Year = 2009
                        },
                        new
                        {
                            Id = 95,
                            Author = "Nicholaus Waelchi",
                            ItemType = 0,
                            Location = "East Nathanael",
                            Status = 0,
                            Title = "Small Cotton Chair",
                            Year = 2019
                        },
                        new
                        {
                            Id = 96,
                            Author = "Terrance Sporer",
                            ItemType = 1,
                            Location = "Pierremouth",
                            Status = 0,
                            Title = "Gorgeous Concrete Tuna",
                            Year = 2001
                        },
                        new
                        {
                            Id = 97,
                            Author = "Juliana Sanford",
                            ItemType = 0,
                            Location = "Gradytown",
                            Status = 0,
                            Title = "Tasty Wooden Pizza",
                            Year = 2023
                        },
                        new
                        {
                            Id = 98,
                            Author = "Jarvis Zboncak",
                            ItemType = 1,
                            Location = "Kochberg",
                            Status = 0,
                            Title = "Licensed Plastic Fish",
                            Year = 2006
                        },
                        new
                        {
                            Id = 99,
                            Author = "Marty Muller",
                            ItemType = 1,
                            Location = "Port Fredashire",
                            Status = 0,
                            Title = "Incredible Plastic Chicken",
                            Year = 2013
                        },
                        new
                        {
                            Id = 100,
                            Author = "Hillary Jacobs",
                            ItemType = 1,
                            Location = "Cartertown",
                            Status = 0,
                            Title = "Intelligent Wooden Computer",
                            Year = 2021
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("UserId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 96,
                            LoanDate = new DateTime(2022, 6, 15, 18, 7, 19, 514, DateTimeKind.Local).AddTicks(9182),
                            ReservationId = 1,
                            ReturnDate = new DateTime(2023, 6, 7, 13, 46, 31, 843, DateTimeKind.Local).AddTicks(5865),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 87,
                            LoanDate = new DateTime(2023, 2, 8, 5, 30, 53, 671, DateTimeKind.Local).AddTicks(2961),
                            ReservationId = 3,
                            ReturnDate = new DateTime(2024, 5, 8, 20, 0, 43, 9, DateTimeKind.Local).AddTicks(7623),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 73,
                            LoanDate = new DateTime(2022, 11, 21, 16, 3, 16, 543, DateTimeKind.Local).AddTicks(1527),
                            ReservationId = 1,
                            ReturnDate = new DateTime(2023, 11, 28, 18, 51, 24, 842, DateTimeKind.Local).AddTicks(9238),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 37,
                            LoanDate = new DateTime(2022, 12, 8, 13, 41, 36, 981, DateTimeKind.Local).AddTicks(2789),
                            ReservationId = 3,
                            ReturnDate = new DateTime(2023, 10, 25, 11, 29, 30, 261, DateTimeKind.Local).AddTicks(3123),
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 14,
                            LoanDate = new DateTime(2023, 5, 30, 16, 36, 5, 473, DateTimeKind.Local).AddTicks(3461),
                            ReservationId = 5,
                            ReturnDate = new DateTime(2024, 5, 8, 6, 0, 13, 933, DateTimeKind.Local).AddTicks(1977),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Port Alexandreview"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Hacketttown"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Port Mauricioville"
                        },
                        new
                        {
                            Id = 4,
                            LocationName = "West Eldredchester"
                        },
                        new
                        {
                            Id = 5,
                            LocationName = "North Felipastad"
                        },
                        new
                        {
                            Id = 6,
                            LocationName = "Beaulahside"
                        },
                        new
                        {
                            Id = 7,
                            LocationName = "West Wadeshire"
                        },
                        new
                        {
                            Id = 8,
                            LocationName = "West Kip"
                        },
                        new
                        {
                            Id = 9,
                            LocationName = "North Eloiseport"
                        },
                        new
                        {
                            Id = 10,
                            LocationName = "West Addison"
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 27,
                            ReservationDate = new DateTime(2022, 10, 9, 3, 30, 57, 914, DateTimeKind.Local).AddTicks(9964),
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 58,
                            ReservationDate = new DateTime(2022, 9, 17, 20, 27, 25, 103, DateTimeKind.Local).AddTicks(4838),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 76,
                            ReservationDate = new DateTime(2023, 5, 12, 21, 48, 41, 289, DateTimeKind.Local).AddTicks(5653),
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 72,
                            ReservationDate = new DateTime(2023, 5, 24, 14, 24, 20, 5, DateTimeKind.Local).AddTicks(1414),
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 53,
                            ReservationDate = new DateTime(2022, 9, 7, 2, 1, 12, 175, DateTimeKind.Local).AddTicks(3401),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSubscription")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaxItemsPerYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d3a33900-6a1d-4115-8cfe-5cd65506fdd7",
                            Email = "admin@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Administrator",
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHumYUpiEnL20BYmkDhBm+DGg1+YKqe1KnLQwMu2RtV36JSkNRQrtd3+FXhTAPmZEw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "673bbe76-5b9f-4325-a1ec-a9141d8803ec",
                            SubscriptionType = "4",
                            TwoFactorEnabled = false,
                            Type = 2,
                            UserName = "admin@example.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "838718a4-da68-40c8-bcaf-d885b3f7feb8",
                            Email = "librarian@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Librarian",
                            NormalizedEmail = "LIBRARIAN@EXAMPLE.COM",
                            NormalizedUserName = "LIBRARIAN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKgy++PkuUtukNXqZbno28HIJf7dDLE+FskUnK9FmSnYOwLOyfHckqtTLOA25otP7Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dd6b60f3-5c92-46aa-b2f0-cdeb7276953f",
                            SubscriptionType = "3",
                            TwoFactorEnabled = false,
                            Type = 1,
                            UserName = "librarian@example.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1831ee4c-66d5-4a8d-9875-b344c1afe7db",
                            Email = "member@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Member",
                            NormalizedEmail = "MEMBER@EXAMPLE.COM",
                            NormalizedUserName = "MEMBER@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIOTcF8xu7tUEbyLY5QZ9P9LxOTOuoQ7YxNdXvmYJDrXKD9EYr4zAK8IVxGyckmwdA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f9fe5d63-be67-4f9b-b13a-4bff46d9eb21",
                            SubscriptionType = "2",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "member@example.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ef1b7070-3079-4653-96ea-26abf6fb9c29",
                            Email = "Rogers_McClure@hotmail.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Emelie Jast",
                            NormalizedEmail = "BILLIE_POLLICH@HOTMAIL.COM",
                            NormalizedUserName = "ROSALIA.TORPHY28@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKV5wT7FXMRrmyjC3zvOUTDpX48iMdB/ipPlABEnO4T6nOd46hN8h4B+zhBoHq8EDg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d13a68da-52f4-4420-9c80-faf4522f39dd",
                            SubscriptionType = "1",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Amelie.Hagenes@yahoo.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8bf990c4-1d38-46be-80cf-c61f18205308",
                            Email = "Caleb.Hickle50@gmail.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Akeem Bernier",
                            NormalizedEmail = "CALLIE.STOKES80@YAHOO.COM",
                            NormalizedUserName = "BENNETT_PACOCHA@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJzAZA2kMIaEyvc2ur0eHASB2/SoDbNMX77R+cJY1vCwkSUM3pU7rjYboqDNzRetEw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "086f700b-2b0c-4e34-a788-87e4d09cb871",
                            SubscriptionType = "3",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Damaris90@yahoo.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c105c087-656f-40cf-9eeb-5adb3849e96e",
                            Email = "Mekhi_Cassin@yahoo.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Sienna Prohaska",
                            NormalizedEmail = "LACEY48@GMAIL.COM",
                            NormalizedUserName = "KEIRA_NITZSCHE82@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGt6FTNoNUdzLNGTuDtLmVm9fArAifr6WDRdWTZjC+txl1Qs1GueGOQtE+f5prscIw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b67a6eaa-d3b4-4031-8442-30944909e62c",
                            SubscriptionType = "4",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Damien11@yahoo.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BiebWebApp.Models.Invoice", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Loan", b =>
                {
                    b.HasOne("BiebWebApp.Models.Item", "Item")
                        .WithMany("Loans")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.Reservation", "Reservation")
                        .WithMany("Loans")
                        .HasForeignKey("ReservationId");

                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Reservation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.HasOne("BiebWebApp.Models.Item", "Item")
                        .WithMany("Reservations")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BiebWebApp.Models.Item", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("BiebWebApp.Models.User", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
