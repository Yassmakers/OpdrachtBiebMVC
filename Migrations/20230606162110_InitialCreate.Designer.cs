// <auto-generated />
using System;
using BiebWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiebWebApp.Migrations
{
    [DbContext(typeof(BiebWebAppContext))]
    [Migration("20230606162110_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BiebWebApp.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 78.31m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            Amount = 37.52m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Amount = 48.38m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 36.37m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Amount = 92.66m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Amount = 15.22m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Amount = 17.80m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            Amount = 12.55m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            Amount = 83.73m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            Amount = 28.27m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            Amount = 48.51m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            Amount = 20.88m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 13,
                            Amount = 95.10m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 14,
                            Amount = 82.42m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            Amount = 62.65m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 16,
                            Amount = 82.64m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            Amount = 19.22m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 18,
                            Amount = 33.41m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            Amount = 16.64m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 20,
                            Amount = 96.01m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 21,
                            Amount = 97.17m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 22,
                            Amount = 83.56m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 23,
                            Amount = 72.37m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 24,
                            Amount = 27.01m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 25,
                            Amount = 69.57m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 26,
                            Amount = 93.48m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 27,
                            Amount = 24.63m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 28,
                            Amount = 82.89m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 29,
                            Amount = 86.70m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 30,
                            Amount = 25.74m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 31,
                            Amount = 85.05m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 32,
                            Amount = 81.03m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 33,
                            Amount = 75.56m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 34,
                            Amount = 88.49m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 35,
                            Amount = 38.95m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 36,
                            Amount = 48.98m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 37,
                            Amount = 35.80m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 38,
                            Amount = 87.55m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 39,
                            Amount = 66.06m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 40,
                            Amount = 39.63m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 41,
                            Amount = 28.97m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 42,
                            Amount = 87.92m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 43,
                            Amount = 42.31m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 44,
                            Amount = 16.79m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 45,
                            Amount = 61.21m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 46,
                            Amount = 89.42m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 47,
                            Amount = 77.00m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 48,
                            Amount = 49.12m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 49,
                            Amount = 20.49m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 50,
                            Amount = 65.62m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Isidro Daniel",
                            ItemType = 3,
                            Location = "East Keeganville",
                            Status = 0,
                            Title = "Gorgeous Cotton Pizza",
                            Year = 2019
                        },
                        new
                        {
                            Id = 2,
                            Author = "Priscilla McGlynn",
                            ItemType = 0,
                            Location = "North Natmouth",
                            Status = 0,
                            Title = "Tasty Granite Car",
                            Year = 2002
                        },
                        new
                        {
                            Id = 3,
                            Author = "Eula Yundt",
                            ItemType = 2,
                            Location = "Jayneville",
                            Status = 0,
                            Title = "Handmade Plastic Shirt",
                            Year = 2000
                        },
                        new
                        {
                            Id = 4,
                            Author = "Giovanni Predovic",
                            ItemType = 3,
                            Location = "Port Verna",
                            Status = 0,
                            Title = "Handmade Wooden Chips",
                            Year = 2008
                        },
                        new
                        {
                            Id = 5,
                            Author = "Barry Greenfelder",
                            ItemType = 2,
                            Location = "Jordynborough",
                            Status = 0,
                            Title = "Intelligent Cotton Car",
                            Year = 2013
                        },
                        new
                        {
                            Id = 6,
                            Author = "Fermin Bruen",
                            ItemType = 3,
                            Location = "West Audreyland",
                            Status = 0,
                            Title = "Incredible Fresh Ball",
                            Year = 2003
                        },
                        new
                        {
                            Id = 7,
                            Author = "Ned Wunsch",
                            ItemType = 0,
                            Location = "Emilianoburgh",
                            Status = 0,
                            Title = "Refined Rubber Chips",
                            Year = 2018
                        },
                        new
                        {
                            Id = 8,
                            Author = "Shanelle Brown",
                            ItemType = 0,
                            Location = "Adamborough",
                            Status = 0,
                            Title = "Rustic Metal Sausages",
                            Year = 2004
                        },
                        new
                        {
                            Id = 9,
                            Author = "Jennifer Stokes",
                            ItemType = 3,
                            Location = "Finnshire",
                            Status = 0,
                            Title = "Ergonomic Granite Pants",
                            Year = 2011
                        },
                        new
                        {
                            Id = 10,
                            Author = "Henry Vandervort",
                            ItemType = 1,
                            Location = "East Antonette",
                            Status = 0,
                            Title = "Practical Granite Chicken",
                            Year = 2002
                        },
                        new
                        {
                            Id = 11,
                            Author = "Carmine Kris",
                            ItemType = 1,
                            Location = "Corkerybury",
                            Status = 0,
                            Title = "Refined Fresh Hat",
                            Year = 2003
                        },
                        new
                        {
                            Id = 12,
                            Author = "Antwan Crist",
                            ItemType = 2,
                            Location = "Wilmaland",
                            Status = 0,
                            Title = "Tasty Metal Keyboard",
                            Year = 2000
                        },
                        new
                        {
                            Id = 13,
                            Author = "Reanna Wunsch",
                            ItemType = 2,
                            Location = "Garettside",
                            Status = 0,
                            Title = "Licensed Plastic Shirt",
                            Year = 2019
                        },
                        new
                        {
                            Id = 14,
                            Author = "Darian Hills",
                            ItemType = 1,
                            Location = "Mayraside",
                            Status = 0,
                            Title = "Generic Concrete Keyboard",
                            Year = 2013
                        },
                        new
                        {
                            Id = 15,
                            Author = "Winifred Collier",
                            ItemType = 2,
                            Location = "Frederiqueville",
                            Status = 0,
                            Title = "Gorgeous Soft Chair",
                            Year = 2010
                        },
                        new
                        {
                            Id = 16,
                            Author = "Kieran Becker",
                            ItemType = 3,
                            Location = "Nicholashaven",
                            Status = 0,
                            Title = "Unbranded Steel Shoes",
                            Year = 2016
                        },
                        new
                        {
                            Id = 17,
                            Author = "Aniya Schinner",
                            ItemType = 2,
                            Location = "West Shawnaton",
                            Status = 0,
                            Title = "Licensed Wooden Shoes",
                            Year = 2006
                        },
                        new
                        {
                            Id = 18,
                            Author = "Monroe Trantow",
                            ItemType = 1,
                            Location = "East Coy",
                            Status = 0,
                            Title = "Licensed Granite Computer",
                            Year = 2012
                        },
                        new
                        {
                            Id = 19,
                            Author = "Richard Yost",
                            ItemType = 3,
                            Location = "West Flo",
                            Status = 0,
                            Title = "Rustic Rubber Pants",
                            Year = 2000
                        },
                        new
                        {
                            Id = 20,
                            Author = "Orin Blick",
                            ItemType = 2,
                            Location = "New Ari",
                            Status = 0,
                            Title = "Intelligent Fresh Pizza",
                            Year = 2012
                        },
                        new
                        {
                            Id = 21,
                            Author = "Margie Zieme",
                            ItemType = 3,
                            Location = "North Jamilport",
                            Status = 0,
                            Title = "Handmade Steel Keyboard",
                            Year = 2019
                        },
                        new
                        {
                            Id = 22,
                            Author = "Domenick Bartell",
                            ItemType = 3,
                            Location = "South Lizashire",
                            Status = 0,
                            Title = "Ergonomic Frozen Table",
                            Year = 2008
                        },
                        new
                        {
                            Id = 23,
                            Author = "Raheem Schimmel",
                            ItemType = 1,
                            Location = "Brianland",
                            Status = 0,
                            Title = "Intelligent Plastic Car",
                            Year = 2004
                        },
                        new
                        {
                            Id = 24,
                            Author = "Kenyon Schowalter",
                            ItemType = 3,
                            Location = "East Theodoreland",
                            Status = 0,
                            Title = "Refined Steel Soap",
                            Year = 2019
                        },
                        new
                        {
                            Id = 25,
                            Author = "Janice Bednar",
                            ItemType = 2,
                            Location = "Quigleyborough",
                            Status = 0,
                            Title = "Fantastic Plastic Towels",
                            Year = 2023
                        },
                        new
                        {
                            Id = 26,
                            Author = "Halie Grant",
                            ItemType = 1,
                            Location = "Izaiahside",
                            Status = 0,
                            Title = "Handcrafted Metal Keyboard",
                            Year = 2013
                        },
                        new
                        {
                            Id = 27,
                            Author = "Eda Hickle",
                            ItemType = 1,
                            Location = "Norbertoburgh",
                            Status = 0,
                            Title = "Tasty Cotton Mouse",
                            Year = 2002
                        },
                        new
                        {
                            Id = 28,
                            Author = "Alphonso Marvin",
                            ItemType = 1,
                            Location = "East Jailyn",
                            Status = 0,
                            Title = "Fantastic Soft Chicken",
                            Year = 2008
                        },
                        new
                        {
                            Id = 29,
                            Author = "Mae Champlin",
                            ItemType = 2,
                            Location = "North Lilla",
                            Status = 0,
                            Title = "Gorgeous Fresh Shirt",
                            Year = 2010
                        },
                        new
                        {
                            Id = 30,
                            Author = "Bailee Bartell",
                            ItemType = 2,
                            Location = "Port Daryl",
                            Status = 0,
                            Title = "Gorgeous Rubber Hat",
                            Year = 2001
                        },
                        new
                        {
                            Id = 31,
                            Author = "Kallie Feil",
                            ItemType = 2,
                            Location = "Port Isai",
                            Status = 0,
                            Title = "Fantastic Wooden Ball",
                            Year = 2007
                        },
                        new
                        {
                            Id = 32,
                            Author = "Jamal Pagac",
                            ItemType = 3,
                            Location = "Claudebury",
                            Status = 0,
                            Title = "Fantastic Frozen Computer",
                            Year = 2023
                        },
                        new
                        {
                            Id = 33,
                            Author = "Ova Cassin",
                            ItemType = 3,
                            Location = "Dudleybury",
                            Status = 0,
                            Title = "Gorgeous Steel Computer",
                            Year = 2006
                        },
                        new
                        {
                            Id = 34,
                            Author = "Bailee Rowe",
                            ItemType = 3,
                            Location = "Lylamouth",
                            Status = 0,
                            Title = "Rustic Cotton Ball",
                            Year = 2022
                        },
                        new
                        {
                            Id = 35,
                            Author = "Yesenia Cruickshank",
                            ItemType = 3,
                            Location = "Arnoldofurt",
                            Status = 0,
                            Title = "Sleek Wooden Computer",
                            Year = 2002
                        },
                        new
                        {
                            Id = 36,
                            Author = "Viviane Kunze",
                            ItemType = 2,
                            Location = "North Todberg",
                            Status = 0,
                            Title = "Fantastic Wooden Computer",
                            Year = 2023
                        },
                        new
                        {
                            Id = 37,
                            Author = "Dedric McLaughlin",
                            ItemType = 3,
                            Location = "Lebsacktown",
                            Status = 0,
                            Title = "Unbranded Granite Towels",
                            Year = 2016
                        },
                        new
                        {
                            Id = 38,
                            Author = "Rose Lakin",
                            ItemType = 2,
                            Location = "Kohlertown",
                            Status = 0,
                            Title = "Small Rubber Tuna",
                            Year = 2016
                        },
                        new
                        {
                            Id = 39,
                            Author = "Gerda Fahey",
                            ItemType = 0,
                            Location = "Lake Brown",
                            Status = 0,
                            Title = "Sleek Frozen Chips",
                            Year = 2005
                        },
                        new
                        {
                            Id = 40,
                            Author = "Freeman Harber",
                            ItemType = 0,
                            Location = "McGlynnland",
                            Status = 0,
                            Title = "Tasty Soft Ball",
                            Year = 2022
                        },
                        new
                        {
                            Id = 41,
                            Author = "Fleta Rippin",
                            ItemType = 2,
                            Location = "New Orpha",
                            Status = 0,
                            Title = "Tasty Wooden Gloves",
                            Year = 2015
                        },
                        new
                        {
                            Id = 42,
                            Author = "Shany Okuneva",
                            ItemType = 1,
                            Location = "Haneland",
                            Status = 0,
                            Title = "Refined Concrete Fish",
                            Year = 2008
                        },
                        new
                        {
                            Id = 43,
                            Author = "Burnice Kunze",
                            ItemType = 2,
                            Location = "Kuvalisborough",
                            Status = 0,
                            Title = "Refined Metal Salad",
                            Year = 2015
                        },
                        new
                        {
                            Id = 44,
                            Author = "Eldred McDermott",
                            ItemType = 1,
                            Location = "Port Tomasafort",
                            Status = 0,
                            Title = "Sleek Soft Chips",
                            Year = 2000
                        },
                        new
                        {
                            Id = 45,
                            Author = "Joanie Funk",
                            ItemType = 1,
                            Location = "South Baronberg",
                            Status = 0,
                            Title = "Sleek Rubber Soap",
                            Year = 2015
                        },
                        new
                        {
                            Id = 46,
                            Author = "Alena Nolan",
                            ItemType = 1,
                            Location = "North Ladarius",
                            Status = 0,
                            Title = "Gorgeous Cotton Pizza",
                            Year = 2002
                        },
                        new
                        {
                            Id = 47,
                            Author = "Rodrick Collins",
                            ItemType = 3,
                            Location = "Mosciskiburgh",
                            Status = 0,
                            Title = "Licensed Soft Pizza",
                            Year = 2016
                        },
                        new
                        {
                            Id = 48,
                            Author = "Orion Terry",
                            ItemType = 3,
                            Location = "North Alenafurt",
                            Status = 0,
                            Title = "Fantastic Metal Keyboard",
                            Year = 2003
                        },
                        new
                        {
                            Id = 49,
                            Author = "Jaleel Trantow",
                            ItemType = 1,
                            Location = "Port Adammouth",
                            Status = 0,
                            Title = "Tasty Granite Shoes",
                            Year = 2016
                        },
                        new
                        {
                            Id = 50,
                            Author = "Dan Rice",
                            ItemType = 2,
                            Location = "New Gustave",
                            Status = 0,
                            Title = "Sleek Fresh Salad",
                            Year = 2021
                        },
                        new
                        {
                            Id = 51,
                            Author = "Sonny Bogisich",
                            ItemType = 1,
                            Location = "Lake Georgianafurt",
                            Status = 0,
                            Title = "Small Granite Bacon",
                            Year = 2021
                        },
                        new
                        {
                            Id = 52,
                            Author = "Quinten Kerluke",
                            ItemType = 1,
                            Location = "Stoltenbergmouth",
                            Status = 0,
                            Title = "Rustic Cotton Pants",
                            Year = 2004
                        },
                        new
                        {
                            Id = 53,
                            Author = "Alisha Davis",
                            ItemType = 0,
                            Location = "Lake Ariel",
                            Status = 0,
                            Title = "Unbranded Concrete Pants",
                            Year = 2022
                        },
                        new
                        {
                            Id = 54,
                            Author = "Irwin Klocko",
                            ItemType = 0,
                            Location = "Bellebury",
                            Status = 0,
                            Title = "Fantastic Frozen Pizza",
                            Year = 2002
                        },
                        new
                        {
                            Id = 55,
                            Author = "Jeremie Simonis",
                            ItemType = 3,
                            Location = "North Jaunita",
                            Status = 0,
                            Title = "Tasty Fresh Table",
                            Year = 2022
                        },
                        new
                        {
                            Id = 56,
                            Author = "Hardy Brekke",
                            ItemType = 1,
                            Location = "Marksshire",
                            Status = 0,
                            Title = "Gorgeous Concrete Tuna",
                            Year = 2008
                        },
                        new
                        {
                            Id = 57,
                            Author = "Marlen Kiehn",
                            ItemType = 1,
                            Location = "Eramouth",
                            Status = 0,
                            Title = "Licensed Fresh Shirt",
                            Year = 2016
                        },
                        new
                        {
                            Id = 58,
                            Author = "Mavis Hahn",
                            ItemType = 2,
                            Location = "Cummingsmouth",
                            Status = 0,
                            Title = "Incredible Rubber Soap",
                            Year = 2014
                        },
                        new
                        {
                            Id = 59,
                            Author = "Willie Gerlach",
                            ItemType = 3,
                            Location = "New Mitchellhaven",
                            Status = 0,
                            Title = "Handmade Soft Keyboard",
                            Year = 2009
                        },
                        new
                        {
                            Id = 60,
                            Author = "Bennie Raynor",
                            ItemType = 1,
                            Location = "East Shaniatown",
                            Status = 0,
                            Title = "Sleek Granite Sausages",
                            Year = 2013
                        },
                        new
                        {
                            Id = 61,
                            Author = "Regan Bernier",
                            ItemType = 1,
                            Location = "Ryanburgh",
                            Status = 0,
                            Title = "Sleek Soft Sausages",
                            Year = 2001
                        },
                        new
                        {
                            Id = 62,
                            Author = "Shirley Lockman",
                            ItemType = 0,
                            Location = "Rigobertobury",
                            Status = 0,
                            Title = "Unbranded Rubber Gloves",
                            Year = 2015
                        },
                        new
                        {
                            Id = 63,
                            Author = "Vilma Effertz",
                            ItemType = 3,
                            Location = "East Stone",
                            Status = 0,
                            Title = "Gorgeous Cotton Shoes",
                            Year = 2016
                        },
                        new
                        {
                            Id = 64,
                            Author = "Shakira Wyman",
                            ItemType = 0,
                            Location = "North Keltonshire",
                            Status = 0,
                            Title = "Rustic Steel Fish",
                            Year = 2017
                        },
                        new
                        {
                            Id = 65,
                            Author = "Rhea Romaguera",
                            ItemType = 1,
                            Location = "East Green",
                            Status = 0,
                            Title = "Practical Cotton Bacon",
                            Year = 2022
                        },
                        new
                        {
                            Id = 66,
                            Author = "Jamil Lowe",
                            ItemType = 3,
                            Location = "Sauerberg",
                            Status = 0,
                            Title = "Ergonomic Concrete Car",
                            Year = 2021
                        },
                        new
                        {
                            Id = 67,
                            Author = "Hester Kuhn",
                            ItemType = 2,
                            Location = "Bogisichland",
                            Status = 0,
                            Title = "Unbranded Concrete Shirt",
                            Year = 2020
                        },
                        new
                        {
                            Id = 68,
                            Author = "Jake Hickle",
                            ItemType = 1,
                            Location = "Prohaskafurt",
                            Status = 0,
                            Title = "Licensed Concrete Mouse",
                            Year = 2015
                        },
                        new
                        {
                            Id = 69,
                            Author = "Kenny Breitenberg",
                            ItemType = 1,
                            Location = "Sengershire",
                            Status = 0,
                            Title = "Handmade Rubber Ball",
                            Year = 2000
                        },
                        new
                        {
                            Id = 70,
                            Author = "Kyla Franecki",
                            ItemType = 1,
                            Location = "Weberhaven",
                            Status = 0,
                            Title = "Fantastic Rubber Bike",
                            Year = 2006
                        },
                        new
                        {
                            Id = 71,
                            Author = "Dorothea Greenholt",
                            ItemType = 2,
                            Location = "Buckridgeland",
                            Status = 0,
                            Title = "Awesome Steel Fish",
                            Year = 2006
                        },
                        new
                        {
                            Id = 72,
                            Author = "Rollin Heller",
                            ItemType = 2,
                            Location = "Roderickport",
                            Status = 0,
                            Title = "Small Wooden Shirt",
                            Year = 2008
                        },
                        new
                        {
                            Id = 73,
                            Author = "Cristopher Hyatt",
                            ItemType = 2,
                            Location = "Port Theresia",
                            Status = 0,
                            Title = "Intelligent Soft Tuna",
                            Year = 2006
                        },
                        new
                        {
                            Id = 74,
                            Author = "Mitchell Hahn",
                            ItemType = 0,
                            Location = "New Gilbertofurt",
                            Status = 0,
                            Title = "Intelligent Soft Bacon",
                            Year = 2016
                        },
                        new
                        {
                            Id = 75,
                            Author = "Carrie Leuschke",
                            ItemType = 1,
                            Location = "Wilhelminechester",
                            Status = 0,
                            Title = "Small Steel Computer",
                            Year = 2021
                        },
                        new
                        {
                            Id = 76,
                            Author = "Una Gleichner",
                            ItemType = 2,
                            Location = "Port Amaramouth",
                            Status = 0,
                            Title = "Fantastic Steel Hat",
                            Year = 2014
                        },
                        new
                        {
                            Id = 77,
                            Author = "Katelin Considine",
                            ItemType = 1,
                            Location = "Mariahtown",
                            Status = 0,
                            Title = "Incredible Plastic Chicken",
                            Year = 2014
                        },
                        new
                        {
                            Id = 78,
                            Author = "Torrance Lind",
                            ItemType = 1,
                            Location = "South Ephraimmouth",
                            Status = 0,
                            Title = "Sleek Cotton Gloves",
                            Year = 2021
                        },
                        new
                        {
                            Id = 79,
                            Author = "Bettye Dickens",
                            ItemType = 2,
                            Location = "East Tyreetown",
                            Status = 0,
                            Title = "Fantastic Plastic Car",
                            Year = 2012
                        },
                        new
                        {
                            Id = 80,
                            Author = "Mervin Maggio",
                            ItemType = 1,
                            Location = "Schneiderland",
                            Status = 0,
                            Title = "Handmade Frozen Sausages",
                            Year = 2020
                        },
                        new
                        {
                            Id = 81,
                            Author = "Carmine Swift",
                            ItemType = 1,
                            Location = "New Caletown",
                            Status = 0,
                            Title = "Incredible Metal Ball",
                            Year = 2009
                        },
                        new
                        {
                            Id = 82,
                            Author = "Greg Botsford",
                            ItemType = 2,
                            Location = "Port Josuefurt",
                            Status = 0,
                            Title = "Practical Concrete Chair",
                            Year = 2017
                        },
                        new
                        {
                            Id = 83,
                            Author = "Karson Volkman",
                            ItemType = 3,
                            Location = "West Theodora",
                            Status = 0,
                            Title = "Handcrafted Soft Towels",
                            Year = 2003
                        },
                        new
                        {
                            Id = 84,
                            Author = "Enrico Lehner",
                            ItemType = 0,
                            Location = "Alffurt",
                            Status = 0,
                            Title = "Rustic Frozen Cheese",
                            Year = 2009
                        },
                        new
                        {
                            Id = 85,
                            Author = "Reece Rempel",
                            ItemType = 3,
                            Location = "South Vicente",
                            Status = 0,
                            Title = "Practical Metal Bike",
                            Year = 2023
                        },
                        new
                        {
                            Id = 86,
                            Author = "Vida Abbott",
                            ItemType = 1,
                            Location = "Terrychester",
                            Status = 0,
                            Title = "Incredible Soft Chips",
                            Year = 2012
                        },
                        new
                        {
                            Id = 87,
                            Author = "Chelsie Maggio",
                            ItemType = 1,
                            Location = "North Susan",
                            Status = 0,
                            Title = "Incredible Wooden Computer",
                            Year = 2011
                        },
                        new
                        {
                            Id = 88,
                            Author = "Ambrose Powlowski",
                            ItemType = 3,
                            Location = "East Burley",
                            Status = 0,
                            Title = "Intelligent Soft Bacon",
                            Year = 2008
                        },
                        new
                        {
                            Id = 89,
                            Author = "Gordon Morissette",
                            ItemType = 0,
                            Location = "Ryanfort",
                            Status = 0,
                            Title = "Refined Metal Chips",
                            Year = 2000
                        },
                        new
                        {
                            Id = 90,
                            Author = "Garth Koch",
                            ItemType = 0,
                            Location = "New Glendaberg",
                            Status = 0,
                            Title = "Unbranded Fresh Hat",
                            Year = 2022
                        },
                        new
                        {
                            Id = 91,
                            Author = "Buster Ratke",
                            ItemType = 0,
                            Location = "East Malcolmfort",
                            Status = 0,
                            Title = "Handmade Wooden Mouse",
                            Year = 2017
                        },
                        new
                        {
                            Id = 92,
                            Author = "Robyn Mohr",
                            ItemType = 0,
                            Location = "Port Kyliefort",
                            Status = 0,
                            Title = "Incredible Soft Sausages",
                            Year = 2021
                        },
                        new
                        {
                            Id = 93,
                            Author = "Janie Casper",
                            ItemType = 1,
                            Location = "South Dameon",
                            Status = 0,
                            Title = "Licensed Granite Cheese",
                            Year = 2001
                        },
                        new
                        {
                            Id = 94,
                            Author = "Stuart Schimmel",
                            ItemType = 2,
                            Location = "New Lerastad",
                            Status = 0,
                            Title = "Handmade Cotton Table",
                            Year = 2014
                        },
                        new
                        {
                            Id = 95,
                            Author = "Justine Bernhard",
                            ItemType = 0,
                            Location = "Howeborough",
                            Status = 0,
                            Title = "Incredible Plastic Ball",
                            Year = 2008
                        },
                        new
                        {
                            Id = 96,
                            Author = "Nettie Russel",
                            ItemType = 2,
                            Location = "Terrystad",
                            Status = 0,
                            Title = "Fantastic Wooden Bacon",
                            Year = 2005
                        },
                        new
                        {
                            Id = 97,
                            Author = "Norris Carter",
                            ItemType = 0,
                            Location = "Jenniferville",
                            Status = 0,
                            Title = "Practical Metal Soap",
                            Year = 2020
                        },
                        new
                        {
                            Id = 98,
                            Author = "Janie Heller",
                            ItemType = 0,
                            Location = "South Violetteborough",
                            Status = 0,
                            Title = "Unbranded Plastic Car",
                            Year = 2012
                        },
                        new
                        {
                            Id = 99,
                            Author = "Maeve Hammes",
                            ItemType = 2,
                            Location = "Wisozkburgh",
                            Status = 0,
                            Title = "Handmade Cotton Pizza",
                            Year = 2021
                        },
                        new
                        {
                            Id = 100,
                            Author = "Paul Hilpert",
                            ItemType = 3,
                            Location = "Douglasland",
                            Status = 0,
                            Title = "Intelligent Plastic Bacon",
                            Year = 2012
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("UserId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 81,
                            LoanDate = new DateTime(2023, 3, 22, 15, 40, 38, 124, DateTimeKind.Local).AddTicks(8640),
                            ReservationId = 2,
                            ReturnDate = new DateTime(2023, 12, 26, 14, 22, 44, 925, DateTimeKind.Local).AddTicks(4795),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 78,
                            LoanDate = new DateTime(2022, 12, 18, 19, 52, 6, 286, DateTimeKind.Local).AddTicks(3239),
                            ReservationId = 1,
                            ReturnDate = new DateTime(2023, 11, 10, 19, 13, 9, 687, DateTimeKind.Local).AddTicks(9667),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 60,
                            LoanDate = new DateTime(2022, 11, 14, 8, 28, 46, 849, DateTimeKind.Local).AddTicks(2863),
                            ReservationId = 3,
                            ReturnDate = new DateTime(2024, 4, 20, 19, 19, 59, 462, DateTimeKind.Local).AddTicks(8000),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 98,
                            LoanDate = new DateTime(2023, 4, 26, 5, 24, 22, 604, DateTimeKind.Local).AddTicks(2492),
                            ReservationId = 1,
                            ReturnDate = new DateTime(2023, 7, 24, 14, 30, 27, 145, DateTimeKind.Local).AddTicks(1646),
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 46,
                            LoanDate = new DateTime(2023, 2, 5, 7, 7, 56, 578, DateTimeKind.Local).AddTicks(8530),
                            ReservationId = 4,
                            ReturnDate = new DateTime(2023, 10, 18, 20, 35, 19, 383, DateTimeKind.Local).AddTicks(1802),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Lake Clarabelle"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Wolfmouth"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Lake Elta"
                        },
                        new
                        {
                            Id = 4,
                            LocationName = "East Brandthaven"
                        },
                        new
                        {
                            Id = 5,
                            LocationName = "East Isabel"
                        },
                        new
                        {
                            Id = 6,
                            LocationName = "Kuphalton"
                        },
                        new
                        {
                            Id = 7,
                            LocationName = "Jackelineburgh"
                        },
                        new
                        {
                            Id = 8,
                            LocationName = "New Austynberg"
                        },
                        new
                        {
                            Id = 9,
                            LocationName = "Lauriannehaven"
                        },
                        new
                        {
                            Id = 10,
                            LocationName = "East Sarina"
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 43,
                            ReservationDate = new DateTime(2023, 4, 12, 6, 14, 18, 389, DateTimeKind.Local).AddTicks(8914),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 87,
                            ReservationDate = new DateTime(2023, 2, 4, 0, 17, 28, 875, DateTimeKind.Local).AddTicks(8611),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 7,
                            ReservationDate = new DateTime(2023, 6, 5, 15, 19, 17, 292, DateTimeKind.Local).AddTicks(7912),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 91,
                            ReservationDate = new DateTime(2023, 3, 11, 12, 27, 37, 311, DateTimeKind.Local).AddTicks(4149),
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 4,
                            ReservationDate = new DateTime(2023, 5, 23, 19, 10, 6, 276, DateTimeKind.Local).AddTicks(6344),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSubscription")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaxItemsPerYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b3139084-29f4-4971-b525-5020242a8cc0",
                            Email = "admin@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Administrator",
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBn4auWOKFcBriVQrcAqkPJU08mlMI4E5I3lbocF+PyCJJSrNz6ITXn8ezmcxVBzpw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d3f53511-8004-4bb0-98f9-dc2bada410bb",
                            SubscriptionType = "4",
                            TwoFactorEnabled = false,
                            Type = 2,
                            UserName = "admin@example.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8ced3a36-559a-4a52-ad36-566c2120768e",
                            Email = "librarian@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Librarian",
                            NormalizedEmail = "LIBRARIAN@EXAMPLE.COM",
                            NormalizedUserName = "LIBRARIAN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEP7WnhnLiuCFh6xKRliU7qK6vnzD5X1ipaNKaOmMLoogJYQ70PzwHAut7XvRDSxk8w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "39f7a8a1-0e2e-448f-8f82-b29e6f97623c",
                            SubscriptionType = "3",
                            TwoFactorEnabled = false,
                            Type = 1,
                            UserName = "librarian@example.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dff2f1b2-84dd-4866-b3ec-46a9fe93bf9f",
                            Email = "member@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Member",
                            NormalizedEmail = "MEMBER@EXAMPLE.COM",
                            NormalizedUserName = "MEMBER@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHzWuxV5cKbCNISbTbZNkHYPD+i0C1a8D7U9RJCjrbseXqMi2dOclEUx0UmRg9vIHA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fc0f7b0a-31a3-48e1-a786-9e2343a331e4",
                            SubscriptionType = "2",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "member@example.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8a563195-c372-4273-87ad-a2779e27dafa",
                            Email = "Yasmin_Stiedemann@gmail.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Hettie Jaskolski",
                            NormalizedEmail = "ALFORD24@GMAIL.COM",
                            NormalizedUserName = "RONNY_HUELS63@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMo4OUSG3hO7yES+8OKJQe4AUnjqziwtyg76XW5yzoVyh3fU7EnSQG5gOok2kA5O3g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "373baa20-8c66-44dc-a00f-6ea1f206ca76",
                            SubscriptionType = "1",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Lenna.Spencer@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "996d1b6e-3bc8-40ed-b990-6ba3613f93c3",
                            Email = "Meda30@gmail.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Tobin Rohan",
                            NormalizedEmail = "MERCEDES73@YAHOO.COM",
                            NormalizedUserName = "OTTILIE.FERRY17@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENtoYjiNREFJ4WkVNNuYyHSsIFOUimwkjWIChsIe2iFX136wwzGEWOrcsM11HvA4Gg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0d75eefe-b24e-45a9-a36c-f53943ed56a1",
                            SubscriptionType = "3",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Conner70@yahoo.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "04bf99b2-9994-452b-bfa6-04cc89fa0f8a",
                            Email = "Kiley.Steuber@hotmail.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Sam O'Reilly",
                            NormalizedEmail = "MAXWELL.STEHR11@HOTMAIL.COM",
                            NormalizedUserName = "LEMUEL66@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBqfGMvK3R3iSCAKmqWD3OePH+CO7h1Z9xpLYzmgr2uL3HVUq8w3Uhtlj415nfjAvw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c42b9cf6-bd05-4ffd-8cb5-4cfc0da30017",
                            SubscriptionType = "4",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Hulda.Runolfsson@hotmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BiebWebApp.Models.Invoice", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Loan", b =>
                {
                    b.HasOne("BiebWebApp.Models.Item", "Item")
                        .WithMany("Loans")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.Reservation", "Reservation")
                        .WithMany("Loans")
                        .HasForeignKey("ReservationId");

                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Reservation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.HasOne("BiebWebApp.Models.Item", "Item")
                        .WithMany("Reservations")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BiebWebApp.Models.Item", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("BiebWebApp.Models.User", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
