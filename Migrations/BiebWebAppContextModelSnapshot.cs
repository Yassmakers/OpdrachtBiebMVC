// <auto-generated />
using System;
using BiebWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiebWebApp.Migrations
{
    [DbContext(typeof(BiebWebAppContext))]
    partial class BiebWebAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BiebWebApp.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 11.25m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 37.16m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Amount = 84.83m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 21.95m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 13.87m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Amount = 39.23m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Amount = 41.68m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            Amount = 46.63m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            Amount = 11.33m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            Amount = 22.26m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            Amount = 62.94m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 12,
                            Amount = 23.83m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            Amount = 19.30m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            Amount = 94.57m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 15,
                            Amount = 26.50m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 16,
                            Amount = 74.86m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 17,
                            Amount = 66.23m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 18,
                            Amount = 73.68m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 19,
                            Amount = 44.97m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 20,
                            Amount = 42.27m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 21,
                            Amount = 18.14m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 22,
                            Amount = 82.03m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 23,
                            Amount = 92.68m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 24,
                            Amount = 83.37m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 25,
                            Amount = 26.41m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 26,
                            Amount = 40.05m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 27,
                            Amount = 71.44m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 28,
                            Amount = 16.58m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 29,
                            Amount = 69.88m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 30,
                            Amount = 43.45m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 31,
                            Amount = 48.81m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 32,
                            Amount = 11.12m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 33,
                            Amount = 53.31m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 34,
                            Amount = 35.64m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 35,
                            Amount = 19.76m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 36,
                            Amount = 13.00m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 37,
                            Amount = 73.96m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 38,
                            Amount = 42.38m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 39,
                            Amount = 68.15m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 40,
                            Amount = 94.01m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 41,
                            Amount = 61.20m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 42,
                            Amount = 57.03m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 43,
                            Amount = 29.83m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 44,
                            Amount = 28.63m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 45,
                            Amount = 29.78m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 46,
                            Amount = 95.52m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 47,
                            Amount = 71.24m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 48,
                            Amount = 17.46m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 49,
                            Amount = 86.40m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 50,
                            Amount = 11.85m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Horace Kiehn",
                            ItemType = 1,
                            Location = "Krystalshire",
                            Status = 0,
                            Title = "Fantastic Wooden Hat",
                            Year = 2009
                        },
                        new
                        {
                            Id = 2,
                            Author = "Alejandra Marquardt",
                            ItemType = 0,
                            Location = "North Ken",
                            Status = 0,
                            Title = "Licensed Frozen Chair",
                            Year = 2010
                        },
                        new
                        {
                            Id = 3,
                            Author = "Kenton Terry",
                            ItemType = 2,
                            Location = "North Lizaside",
                            Status = 0,
                            Title = "Handcrafted Plastic Shoes",
                            Year = 2018
                        },
                        new
                        {
                            Id = 4,
                            Author = "Jimmy Abernathy",
                            ItemType = 2,
                            Location = "North Noahview",
                            Status = 0,
                            Title = "Generic Frozen Gloves",
                            Year = 2006
                        },
                        new
                        {
                            Id = 5,
                            Author = "Kayli Bauch",
                            ItemType = 0,
                            Location = "South Devan",
                            Status = 0,
                            Title = "Refined Cotton Bike",
                            Year = 2016
                        },
                        new
                        {
                            Id = 6,
                            Author = "Bailey Koelpin",
                            ItemType = 0,
                            Location = "Vanceburgh",
                            Status = 0,
                            Title = "Handcrafted Plastic Hat",
                            Year = 2010
                        },
                        new
                        {
                            Id = 7,
                            Author = "Joseph Doyle",
                            ItemType = 0,
                            Location = "Ratkeport",
                            Status = 0,
                            Title = "Incredible Plastic Pizza",
                            Year = 2015
                        },
                        new
                        {
                            Id = 8,
                            Author = "Mariam Turcotte",
                            ItemType = 3,
                            Location = "Mrazmouth",
                            Status = 0,
                            Title = "Generic Granite Pants",
                            Year = 2023
                        },
                        new
                        {
                            Id = 9,
                            Author = "Aglae Pfannerstill",
                            ItemType = 2,
                            Location = "Manleymouth",
                            Status = 0,
                            Title = "Generic Rubber Salad",
                            Year = 2007
                        },
                        new
                        {
                            Id = 10,
                            Author = "Maybelle Pouros",
                            ItemType = 0,
                            Location = "Lake Duanemouth",
                            Status = 0,
                            Title = "Sleek Wooden Soap",
                            Year = 2016
                        },
                        new
                        {
                            Id = 11,
                            Author = "Katharina Treutel",
                            ItemType = 0,
                            Location = "Port Katrina",
                            Status = 0,
                            Title = "Handmade Wooden Sausages",
                            Year = 2014
                        },
                        new
                        {
                            Id = 12,
                            Author = "Heber Monahan",
                            ItemType = 0,
                            Location = "South Schuyler",
                            Status = 0,
                            Title = "Sleek Granite Tuna",
                            Year = 2023
                        },
                        new
                        {
                            Id = 13,
                            Author = "Kristy Schmitt",
                            ItemType = 1,
                            Location = "Oranshire",
                            Status = 0,
                            Title = "Incredible Metal Keyboard",
                            Year = 2004
                        },
                        new
                        {
                            Id = 14,
                            Author = "Bart Gerhold",
                            ItemType = 2,
                            Location = "Lake Krisborough",
                            Status = 0,
                            Title = "Awesome Rubber Pants",
                            Year = 2023
                        },
                        new
                        {
                            Id = 15,
                            Author = "Shannon Kuhn",
                            ItemType = 1,
                            Location = "Corkeryhaven",
                            Status = 0,
                            Title = "Fantastic Soft Tuna",
                            Year = 2019
                        },
                        new
                        {
                            Id = 16,
                            Author = "Abdul Huel",
                            ItemType = 2,
                            Location = "Starkshire",
                            Status = 0,
                            Title = "Rustic Frozen Shirt",
                            Year = 2003
                        },
                        new
                        {
                            Id = 17,
                            Author = "Lexie Shields",
                            ItemType = 2,
                            Location = "Colefurt",
                            Status = 0,
                            Title = "Rustic Soft Fish",
                            Year = 2017
                        },
                        new
                        {
                            Id = 18,
                            Author = "Cordie Kohler",
                            ItemType = 1,
                            Location = "Port Natbury",
                            Status = 0,
                            Title = "Small Granite Chair",
                            Year = 2018
                        },
                        new
                        {
                            Id = 19,
                            Author = "Westley Stiedemann",
                            ItemType = 2,
                            Location = "South Garthbury",
                            Status = 0,
                            Title = "Ergonomic Concrete Tuna",
                            Year = 2012
                        },
                        new
                        {
                            Id = 20,
                            Author = "Kristoffer Considine",
                            ItemType = 1,
                            Location = "Borisfurt",
                            Status = 0,
                            Title = "Licensed Steel Soap",
                            Year = 2023
                        },
                        new
                        {
                            Id = 21,
                            Author = "Darien Walker",
                            ItemType = 2,
                            Location = "West Griffin",
                            Status = 0,
                            Title = "Rustic Frozen Cheese",
                            Year = 2001
                        },
                        new
                        {
                            Id = 22,
                            Author = "Margaret McCullough",
                            ItemType = 2,
                            Location = "New Yesseniaville",
                            Status = 0,
                            Title = "Awesome Steel Car",
                            Year = 2000
                        },
                        new
                        {
                            Id = 23,
                            Author = "Ronaldo Bernhard",
                            ItemType = 3,
                            Location = "Port Dakota",
                            Status = 0,
                            Title = "Licensed Cotton Ball",
                            Year = 2017
                        },
                        new
                        {
                            Id = 24,
                            Author = "Hosea Mohr",
                            ItemType = 3,
                            Location = "East Venafort",
                            Status = 0,
                            Title = "Awesome Soft Salad",
                            Year = 2011
                        },
                        new
                        {
                            Id = 25,
                            Author = "Marcelino Anderson",
                            ItemType = 1,
                            Location = "South Randy",
                            Status = 0,
                            Title = "Refined Plastic Shoes",
                            Year = 2016
                        },
                        new
                        {
                            Id = 26,
                            Author = "Baron Greenholt",
                            ItemType = 0,
                            Location = "Kassandrastad",
                            Status = 0,
                            Title = "Unbranded Soft Keyboard",
                            Year = 2016
                        },
                        new
                        {
                            Id = 27,
                            Author = "Katelyn Pouros",
                            ItemType = 3,
                            Location = "Angelineland",
                            Status = 0,
                            Title = "Awesome Concrete Towels",
                            Year = 2002
                        },
                        new
                        {
                            Id = 28,
                            Author = "Savanah Schaden",
                            ItemType = 3,
                            Location = "New Lesleyburgh",
                            Status = 0,
                            Title = "Sleek Fresh Hat",
                            Year = 2001
                        },
                        new
                        {
                            Id = 29,
                            Author = "Molly Kuhic",
                            ItemType = 2,
                            Location = "Bergnaumfurt",
                            Status = 0,
                            Title = "Handmade Wooden Shoes",
                            Year = 2022
                        },
                        new
                        {
                            Id = 30,
                            Author = "Carmine Rosenbaum",
                            ItemType = 2,
                            Location = "Lake Augustine",
                            Status = 0,
                            Title = "Rustic Rubber Chips",
                            Year = 2018
                        },
                        new
                        {
                            Id = 31,
                            Author = "Abby Zulauf",
                            ItemType = 1,
                            Location = "New Reece",
                            Status = 0,
                            Title = "Unbranded Granite Hat",
                            Year = 2011
                        },
                        new
                        {
                            Id = 32,
                            Author = "Kaley West",
                            ItemType = 0,
                            Location = "Vonborough",
                            Status = 0,
                            Title = "Unbranded Frozen Ball",
                            Year = 2012
                        },
                        new
                        {
                            Id = 33,
                            Author = "Beau Walsh",
                            ItemType = 0,
                            Location = "Douglastown",
                            Status = 0,
                            Title = "Tasty Soft Salad",
                            Year = 2009
                        },
                        new
                        {
                            Id = 34,
                            Author = "Ephraim Doyle",
                            ItemType = 2,
                            Location = "Wiltonton",
                            Status = 0,
                            Title = "Generic Soft Keyboard",
                            Year = 2022
                        },
                        new
                        {
                            Id = 35,
                            Author = "Bennie Cremin",
                            ItemType = 1,
                            Location = "Westport",
                            Status = 0,
                            Title = "Refined Rubber Mouse",
                            Year = 2023
                        },
                        new
                        {
                            Id = 36,
                            Author = "Steve Brown",
                            ItemType = 0,
                            Location = "West Lizethmouth",
                            Status = 0,
                            Title = "Practical Wooden Car",
                            Year = 2023
                        },
                        new
                        {
                            Id = 37,
                            Author = "Thaddeus Nolan",
                            ItemType = 2,
                            Location = "South Dillanport",
                            Status = 0,
                            Title = "Incredible Metal Fish",
                            Year = 2003
                        },
                        new
                        {
                            Id = 38,
                            Author = "Korey Armstrong",
                            ItemType = 3,
                            Location = "New Karina",
                            Status = 0,
                            Title = "Generic Rubber Fish",
                            Year = 2010
                        },
                        new
                        {
                            Id = 39,
                            Author = "Brook Walter",
                            ItemType = 1,
                            Location = "Hanechester",
                            Status = 0,
                            Title = "Rustic Plastic Bacon",
                            Year = 2000
                        },
                        new
                        {
                            Id = 40,
                            Author = "Tristian Padberg",
                            ItemType = 1,
                            Location = "West Orlo",
                            Status = 0,
                            Title = "Ergonomic Frozen Gloves",
                            Year = 2000
                        },
                        new
                        {
                            Id = 41,
                            Author = "Albertha Wunsch",
                            ItemType = 3,
                            Location = "Willchester",
                            Status = 0,
                            Title = "Handmade Steel Shoes",
                            Year = 2013
                        },
                        new
                        {
                            Id = 42,
                            Author = "Rosalee Stamm",
                            ItemType = 2,
                            Location = "South Colin",
                            Status = 0,
                            Title = "Rustic Concrete Table",
                            Year = 2022
                        },
                        new
                        {
                            Id = 43,
                            Author = "Moses McLaughlin",
                            ItemType = 1,
                            Location = "Johnstonmouth",
                            Status = 0,
                            Title = "Fantastic Wooden Chicken",
                            Year = 2017
                        },
                        new
                        {
                            Id = 44,
                            Author = "Madge Funk",
                            ItemType = 3,
                            Location = "Jarretmouth",
                            Status = 0,
                            Title = "Intelligent Soft Bike",
                            Year = 2009
                        },
                        new
                        {
                            Id = 45,
                            Author = "Gabe Quigley",
                            ItemType = 1,
                            Location = "Smithshire",
                            Status = 0,
                            Title = "Unbranded Frozen Soap",
                            Year = 2020
                        },
                        new
                        {
                            Id = 46,
                            Author = "Amya Bradtke",
                            ItemType = 3,
                            Location = "South Elveraview",
                            Status = 0,
                            Title = "Incredible Cotton Chips",
                            Year = 2015
                        },
                        new
                        {
                            Id = 47,
                            Author = "Courtney Gislason",
                            ItemType = 1,
                            Location = "New Isidroport",
                            Status = 0,
                            Title = "Handmade Steel Ball",
                            Year = 2001
                        },
                        new
                        {
                            Id = 48,
                            Author = "Jordon Champlin",
                            ItemType = 1,
                            Location = "Jordyport",
                            Status = 0,
                            Title = "Handcrafted Wooden Salad",
                            Year = 2016
                        },
                        new
                        {
                            Id = 49,
                            Author = "Kayla Schultz",
                            ItemType = 0,
                            Location = "Port Nestortown",
                            Status = 0,
                            Title = "Licensed Cotton Soap",
                            Year = 2006
                        },
                        new
                        {
                            Id = 50,
                            Author = "Casper Reynolds",
                            ItemType = 2,
                            Location = "Judahland",
                            Status = 0,
                            Title = "Rustic Soft Computer",
                            Year = 2014
                        },
                        new
                        {
                            Id = 51,
                            Author = "Vern White",
                            ItemType = 2,
                            Location = "Erdmanland",
                            Status = 0,
                            Title = "Incredible Concrete Ball",
                            Year = 2012
                        },
                        new
                        {
                            Id = 52,
                            Author = "Cedrick Gaylord",
                            ItemType = 3,
                            Location = "Coryville",
                            Status = 0,
                            Title = "Gorgeous Wooden Mouse",
                            Year = 2016
                        },
                        new
                        {
                            Id = 53,
                            Author = "Norbert Labadie",
                            ItemType = 1,
                            Location = "North Angeline",
                            Status = 0,
                            Title = "Incredible Rubber Chicken",
                            Year = 2000
                        },
                        new
                        {
                            Id = 54,
                            Author = "Nichole Hahn",
                            ItemType = 0,
                            Location = "New Nevabury",
                            Status = 0,
                            Title = "Incredible Steel Computer",
                            Year = 2010
                        },
                        new
                        {
                            Id = 55,
                            Author = "Clemens Casper",
                            ItemType = 2,
                            Location = "Bartonside",
                            Status = 0,
                            Title = "Gorgeous Wooden Fish",
                            Year = 2014
                        },
                        new
                        {
                            Id = 56,
                            Author = "Maverick Ankunding",
                            ItemType = 1,
                            Location = "South Caseyport",
                            Status = 0,
                            Title = "Handmade Soft Gloves",
                            Year = 2004
                        },
                        new
                        {
                            Id = 57,
                            Author = "Mabelle Jakubowski",
                            ItemType = 2,
                            Location = "Lake Jennie",
                            Status = 0,
                            Title = "Licensed Soft Car",
                            Year = 2011
                        },
                        new
                        {
                            Id = 58,
                            Author = "Nicola Mraz",
                            ItemType = 1,
                            Location = "New Theodoreshire",
                            Status = 0,
                            Title = "Tasty Frozen Salad",
                            Year = 2006
                        },
                        new
                        {
                            Id = 59,
                            Author = "Martine Labadie",
                            ItemType = 0,
                            Location = "North Tommie",
                            Status = 0,
                            Title = "Sleek Fresh Bike",
                            Year = 2000
                        },
                        new
                        {
                            Id = 60,
                            Author = "Edgardo Boyle",
                            ItemType = 0,
                            Location = "North Oral",
                            Status = 0,
                            Title = "Handmade Fresh Hat",
                            Year = 2008
                        },
                        new
                        {
                            Id = 61,
                            Author = "Freeda Cummings",
                            ItemType = 0,
                            Location = "Port Pamelamouth",
                            Status = 0,
                            Title = "Sleek Granite Tuna",
                            Year = 2007
                        },
                        new
                        {
                            Id = 62,
                            Author = "Berta Hauck",
                            ItemType = 1,
                            Location = "Lake Lilyanville",
                            Status = 0,
                            Title = "Intelligent Metal Fish",
                            Year = 2016
                        },
                        new
                        {
                            Id = 63,
                            Author = "Keaton Schneider",
                            ItemType = 1,
                            Location = "Fannyfurt",
                            Status = 0,
                            Title = "Fantastic Metal Cheese",
                            Year = 2009
                        },
                        new
                        {
                            Id = 64,
                            Author = "Ricardo Bailey",
                            ItemType = 0,
                            Location = "North Dangelo",
                            Status = 0,
                            Title = "Rustic Granite Shoes",
                            Year = 2009
                        },
                        new
                        {
                            Id = 65,
                            Author = "Diana Muller",
                            ItemType = 0,
                            Location = "Port Rahulmouth",
                            Status = 0,
                            Title = "Incredible Cotton Mouse",
                            Year = 2003
                        },
                        new
                        {
                            Id = 66,
                            Author = "Edwina Bruen",
                            ItemType = 3,
                            Location = "Schambergerbury",
                            Status = 0,
                            Title = "Rustic Wooden Bacon",
                            Year = 2001
                        },
                        new
                        {
                            Id = 67,
                            Author = "Otto Rau",
                            ItemType = 1,
                            Location = "Chesleyfurt",
                            Status = 0,
                            Title = "Gorgeous Cotton Sausages",
                            Year = 2018
                        },
                        new
                        {
                            Id = 68,
                            Author = "Maia Windler",
                            ItemType = 2,
                            Location = "New Vincenza",
                            Status = 0,
                            Title = "Fantastic Concrete Shoes",
                            Year = 2000
                        },
                        new
                        {
                            Id = 69,
                            Author = "Kendall Franecki",
                            ItemType = 0,
                            Location = "Hazlemouth",
                            Status = 0,
                            Title = "Sleek Concrete Shoes",
                            Year = 2018
                        },
                        new
                        {
                            Id = 70,
                            Author = "Selmer Stark",
                            ItemType = 3,
                            Location = "Port Thalia",
                            Status = 0,
                            Title = "Ergonomic Concrete Chicken",
                            Year = 2019
                        },
                        new
                        {
                            Id = 71,
                            Author = "Kane Kohler",
                            ItemType = 3,
                            Location = "Gorczanyborough",
                            Status = 0,
                            Title = "Small Soft Table",
                            Year = 2007
                        },
                        new
                        {
                            Id = 72,
                            Author = "Dereck Mitchell",
                            ItemType = 0,
                            Location = "Toytown",
                            Status = 0,
                            Title = "Handcrafted Frozen Bacon",
                            Year = 2013
                        },
                        new
                        {
                            Id = 73,
                            Author = "Taurean Zemlak",
                            ItemType = 0,
                            Location = "Zulaufburgh",
                            Status = 0,
                            Title = "Gorgeous Rubber Shoes",
                            Year = 2009
                        },
                        new
                        {
                            Id = 74,
                            Author = "Albertha Kuhn",
                            ItemType = 3,
                            Location = "Jaidaside",
                            Status = 0,
                            Title = "Generic Wooden Keyboard",
                            Year = 2003
                        },
                        new
                        {
                            Id = 75,
                            Author = "Abby Padberg",
                            ItemType = 3,
                            Location = "Hoppebury",
                            Status = 0,
                            Title = "Unbranded Steel Ball",
                            Year = 2019
                        },
                        new
                        {
                            Id = 76,
                            Author = "Franco Orn",
                            ItemType = 1,
                            Location = "Cartwrightton",
                            Status = 0,
                            Title = "Handcrafted Plastic Shirt",
                            Year = 2003
                        },
                        new
                        {
                            Id = 77,
                            Author = "Haley Hilll",
                            ItemType = 1,
                            Location = "East Magalistad",
                            Status = 0,
                            Title = "Gorgeous Plastic Tuna",
                            Year = 2008
                        },
                        new
                        {
                            Id = 78,
                            Author = "Liza Steuber",
                            ItemType = 1,
                            Location = "Camillafurt",
                            Status = 0,
                            Title = "Intelligent Concrete Chair",
                            Year = 2009
                        },
                        new
                        {
                            Id = 79,
                            Author = "Diamond Kub",
                            ItemType = 1,
                            Location = "Glennieview",
                            Status = 0,
                            Title = "Small Plastic Tuna",
                            Year = 2021
                        },
                        new
                        {
                            Id = 80,
                            Author = "Ivory Franecki",
                            ItemType = 0,
                            Location = "North Waylon",
                            Status = 0,
                            Title = "Rustic Fresh Gloves",
                            Year = 2010
                        },
                        new
                        {
                            Id = 81,
                            Author = "Cordia Reichert",
                            ItemType = 3,
                            Location = "Runolfssonview",
                            Status = 0,
                            Title = "Unbranded Steel Chair",
                            Year = 2007
                        },
                        new
                        {
                            Id = 82,
                            Author = "Kimberly Erdman",
                            ItemType = 2,
                            Location = "North Alysonbury",
                            Status = 0,
                            Title = "Licensed Wooden Mouse",
                            Year = 2012
                        },
                        new
                        {
                            Id = 83,
                            Author = "Jocelyn Kassulke",
                            ItemType = 3,
                            Location = "Breitenbergborough",
                            Status = 0,
                            Title = "Practical Steel Chicken",
                            Year = 2018
                        },
                        new
                        {
                            Id = 84,
                            Author = "Destini Durgan",
                            ItemType = 0,
                            Location = "East Cathrineshire",
                            Status = 0,
                            Title = "Practical Granite Bacon",
                            Year = 2002
                        },
                        new
                        {
                            Id = 85,
                            Author = "Shawn Schmeler",
                            ItemType = 0,
                            Location = "East Vena",
                            Status = 0,
                            Title = "Tasty Wooden Chicken",
                            Year = 2003
                        },
                        new
                        {
                            Id = 86,
                            Author = "Karine Wyman",
                            ItemType = 0,
                            Location = "West Georgette",
                            Status = 0,
                            Title = "Awesome Rubber Salad",
                            Year = 2020
                        },
                        new
                        {
                            Id = 87,
                            Author = "Regan Harvey",
                            ItemType = 2,
                            Location = "New Earnest",
                            Status = 0,
                            Title = "Unbranded Rubber Computer",
                            Year = 2008
                        },
                        new
                        {
                            Id = 88,
                            Author = "Wallace Erdman",
                            ItemType = 0,
                            Location = "New Aleen",
                            Status = 0,
                            Title = "Generic Steel Pizza",
                            Year = 2000
                        },
                        new
                        {
                            Id = 89,
                            Author = "Oceane Conroy",
                            ItemType = 1,
                            Location = "West Gertrudestad",
                            Status = 0,
                            Title = "Unbranded Granite Mouse",
                            Year = 2019
                        },
                        new
                        {
                            Id = 90,
                            Author = "Lesley Terry",
                            ItemType = 2,
                            Location = "Thaliachester",
                            Status = 0,
                            Title = "Gorgeous Rubber Ball",
                            Year = 2016
                        },
                        new
                        {
                            Id = 91,
                            Author = "Bailey Harris",
                            ItemType = 1,
                            Location = "West Burnice",
                            Status = 0,
                            Title = "Generic Fresh Salad",
                            Year = 2017
                        },
                        new
                        {
                            Id = 92,
                            Author = "Lennie O'Reilly",
                            ItemType = 2,
                            Location = "Larsonville",
                            Status = 0,
                            Title = "Incredible Metal Towels",
                            Year = 2022
                        },
                        new
                        {
                            Id = 93,
                            Author = "Ivy Thiel",
                            ItemType = 0,
                            Location = "Tomfort",
                            Status = 0,
                            Title = "Handcrafted Granite Pizza",
                            Year = 2011
                        },
                        new
                        {
                            Id = 94,
                            Author = "Ayana Huels",
                            ItemType = 1,
                            Location = "New Chesley",
                            Status = 0,
                            Title = "Rustic Concrete Table",
                            Year = 2016
                        },
                        new
                        {
                            Id = 95,
                            Author = "Rhianna Boyer",
                            ItemType = 2,
                            Location = "North Pedroview",
                            Status = 0,
                            Title = "Incredible Frozen Bacon",
                            Year = 2000
                        },
                        new
                        {
                            Id = 96,
                            Author = "Lorine Breitenberg",
                            ItemType = 0,
                            Location = "Hertastad",
                            Status = 0,
                            Title = "Generic Concrete Chicken",
                            Year = 2015
                        },
                        new
                        {
                            Id = 97,
                            Author = "Malvina Carroll",
                            ItemType = 2,
                            Location = "Rogahnbury",
                            Status = 0,
                            Title = "Sleek Frozen Chair",
                            Year = 2014
                        },
                        new
                        {
                            Id = 98,
                            Author = "Haley Beahan",
                            ItemType = 3,
                            Location = "New Clovis",
                            Status = 0,
                            Title = "Sleek Steel Keyboard",
                            Year = 2022
                        },
                        new
                        {
                            Id = 99,
                            Author = "Litzy Leuschke",
                            ItemType = 2,
                            Location = "Ashtonport",
                            Status = 0,
                            Title = "Handcrafted Cotton Salad",
                            Year = 2011
                        },
                        new
                        {
                            Id = 100,
                            Author = "Rhett Greenfelder",
                            ItemType = 3,
                            Location = "Aryannatown",
                            Status = 0,
                            Title = "Gorgeous Frozen Salad",
                            Year = 2010
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("UserId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 17,
                            LoanDate = new DateTime(2023, 3, 2, 21, 38, 0, 716, DateTimeKind.Local).AddTicks(316),
                            ReservationId = 3,
                            ReturnDate = new DateTime(2024, 4, 18, 12, 0, 22, 68, DateTimeKind.Local).AddTicks(2671),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 5,
                            LoanDate = new DateTime(2023, 2, 1, 3, 16, 15, 500, DateTimeKind.Local).AddTicks(7358),
                            ReservationId = 2,
                            ReturnDate = new DateTime(2023, 8, 9, 6, 15, 30, 195, DateTimeKind.Local).AddTicks(6722),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 97,
                            LoanDate = new DateTime(2023, 4, 17, 7, 8, 45, 38, DateTimeKind.Local).AddTicks(8552),
                            ReservationId = 2,
                            ReturnDate = new DateTime(2023, 8, 27, 3, 25, 11, 293, DateTimeKind.Local).AddTicks(4340),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 98,
                            LoanDate = new DateTime(2022, 11, 19, 10, 55, 4, 171, DateTimeKind.Local).AddTicks(5071),
                            ReservationId = 1,
                            ReturnDate = new DateTime(2024, 5, 13, 8, 50, 50, 120, DateTimeKind.Local).AddTicks(1061),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 18,
                            LoanDate = new DateTime(2022, 12, 2, 13, 22, 53, 461, DateTimeKind.Local).AddTicks(1709),
                            ReservationId = 2,
                            ReturnDate = new DateTime(2024, 4, 6, 4, 8, 11, 881, DateTimeKind.Local).AddTicks(8234),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Gagechester"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "North Aracelichester"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "East Willisfort"
                        },
                        new
                        {
                            Id = 4,
                            LocationName = "Beerland"
                        },
                        new
                        {
                            Id = 5,
                            LocationName = "Collierview"
                        },
                        new
                        {
                            Id = 6,
                            LocationName = "Gibsonborough"
                        },
                        new
                        {
                            Id = 7,
                            LocationName = "Port Myrtie"
                        },
                        new
                        {
                            Id = 8,
                            LocationName = "Lake Rocky"
                        },
                        new
                        {
                            Id = 9,
                            LocationName = "Schultzfurt"
                        },
                        new
                        {
                            Id = 10,
                            LocationName = "West Fay"
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 19,
                            ReservationDate = new DateTime(2023, 3, 13, 23, 13, 4, 763, DateTimeKind.Local).AddTicks(651),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 47,
                            ReservationDate = new DateTime(2022, 11, 13, 22, 35, 4, 633, DateTimeKind.Local).AddTicks(1320),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 48,
                            ReservationDate = new DateTime(2023, 1, 22, 5, 14, 5, 395, DateTimeKind.Local).AddTicks(261),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 47,
                            ReservationDate = new DateTime(2022, 6, 16, 11, 11, 2, 835, DateTimeKind.Local).AddTicks(8426),
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 82,
                            ReservationDate = new DateTime(2022, 7, 18, 10, 21, 41, 834, DateTimeKind.Local).AddTicks(8512),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSubscription")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaxItemsPerYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "390721fd-b36f-4e11-9982-e1bed7d7cbfd",
                            Email = "admin@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Administrator",
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOR82YUK/PiulTyWSCr1Ucxiq+ZeH2jlRovVqdbzjG1mBZWgdirM/qDi7DmYBK7kBw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "77ca5a3d-e039-4b48-94b6-345bfb7a1a20",
                            SubscriptionType = "4",
                            TwoFactorEnabled = false,
                            Type = 2,
                            UserName = "admin@example.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9c2f8d5b-7034-4f88-938b-5df814a0f6e3",
                            Email = "librarian@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Librarian",
                            NormalizedEmail = "LIBRARIAN@EXAMPLE.COM",
                            NormalizedUserName = "LIBRARIAN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOj+lBw7xt6kpN+sfnd7zn1eEjVtrcbppxN8bNoY+AHrRjlZ6hZmbweqdS2k4BL7vg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3442883d-018a-4bb6-96ec-66c7c8400027",
                            SubscriptionType = "3",
                            TwoFactorEnabled = false,
                            Type = 1,
                            UserName = "librarian@example.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2937032d-a558-48ca-9c0f-ebe5a50e1a64",
                            Email = "member@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Member",
                            NormalizedEmail = "MEMBER@EXAMPLE.COM",
                            NormalizedUserName = "MEMBER@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMUXLoxQK1Wt0qUes1b5vIf/7jsyAfvmnpqdvGSV4ojxCp4rW39eoexhYe6uD/g0fg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "15a7a42d-0595-4091-b06c-ede301c86e7c",
                            SubscriptionType = "2",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "member@example.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "18b8b442-469f-40c9-b716-4c65884ef05d",
                            Email = "Danial.Frami38@yahoo.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Mustafa Yundt",
                            NormalizedEmail = "JAMEY.OCONNELL32@GMAIL.COM",
                            NormalizedUserName = "MARIANNE.SAUER@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBuIDae9X09ghIff1qORicmOquBAgFPfw/qkWV369VOUJ50KsLYe6rdIEUpKnTlRfg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1d045988-1d24-4661-aa5a-f9078f8e87cd",
                            SubscriptionType = "1",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Delbert.Olson37@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "73201b46-2def-4922-b4b4-730d4a368785",
                            Email = "Maximo_Hodkiewicz@gmail.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Lorna Gusikowski",
                            NormalizedEmail = "EVANS.DICKENS@HOTMAIL.COM",
                            NormalizedUserName = "ORRIN_CONROY82@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBFTl0kHbpm9vVDe57iVKP1gyjVwGvtFm28yDYs/Qpb7tVoCeZSE6xTYg3fEbRbKow==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e1f72566-2a34-491f-b521-9c51938f3747",
                            SubscriptionType = "3",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Darius_Rippin@yahoo.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7399ff15-e45d-4ece-abed-8b6a00f0bc07",
                            Email = "Wilhelmine65@yahoo.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Amara Hayes",
                            NormalizedEmail = "PRICE52@YAHOO.COM",
                            NormalizedUserName = "LENORA83@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHtyAstwC41pHVYLsKVZr0N+AufZXIQf2ENY2reUB7nlBd75WySUB5qDZhtjjiWq3w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1341d899-2ddb-4b24-bded-743f45f687ec",
                            SubscriptionType = "4",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Rae.Zboncak71@hotmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BiebWebApp.Models.Invoice", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Loan", b =>
                {
                    b.HasOne("BiebWebApp.Models.Item", "Item")
                        .WithMany("Loans")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.Reservation", "Reservation")
                        .WithMany("Loans")
                        .HasForeignKey("ReservationId");

                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Reservation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.HasOne("BiebWebApp.Models.Item", "Item")
                        .WithMany("Reservations")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BiebWebApp.Models.Item", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("BiebWebApp.Models.User", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
