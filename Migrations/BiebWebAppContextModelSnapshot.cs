// <auto-generated />
using System;
using BiebWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiebWebApp.Migrations
{
    [DbContext(typeof(BiebWebAppContext))]
    partial class BiebWebAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BiebWebApp.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 72.48m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Amount = 86.92m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 57.07m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 52.75m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 32.84m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Amount = 39.82m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Amount = 90.82m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            Amount = 19.55m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            Amount = 76.96m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            Amount = 88.08m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            Amount = 73.86m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 12,
                            Amount = 59.07m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            Amount = 51.84m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 14,
                            Amount = 13.85m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 15,
                            Amount = 40.76m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 16,
                            Amount = 46.92m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            Amount = 33.95m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 18,
                            Amount = 92.86m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            Amount = 16.53m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 20,
                            Amount = 51.19m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 21,
                            Amount = 20.06m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 22,
                            Amount = 81.85m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 23,
                            Amount = 65.19m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 24,
                            Amount = 20.50m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 25,
                            Amount = 87.03m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 26,
                            Amount = 57.66m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 27,
                            Amount = 95.67m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 28,
                            Amount = 22.91m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 29,
                            Amount = 76.43m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 30,
                            Amount = 76.06m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 31,
                            Amount = 15.48m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 32,
                            Amount = 68.89m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 33,
                            Amount = 85.57m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 34,
                            Amount = 99.58m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 35,
                            Amount = 45.53m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 36,
                            Amount = 48.71m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 37,
                            Amount = 21.93m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 38,
                            Amount = 22.93m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 39,
                            Amount = 14.26m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 40,
                            Amount = 98.66m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 41,
                            Amount = 98.64m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 42,
                            Amount = 24.03m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 43,
                            Amount = 88.69m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 44,
                            Amount = 31.36m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 45,
                            Amount = 37.81m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 46,
                            Amount = 43.76m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 47,
                            Amount = 49.40m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 48,
                            Amount = 25.98m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 49,
                            Amount = 52.23m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 50,
                            Amount = 20.33m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Jarvis Sawayn",
                            ItemType = 1,
                            Location = "Port Emmy",
                            Status = 0,
                            Title = "Handmade Soft Tuna",
                            Year = 2010
                        },
                        new
                        {
                            Id = 2,
                            Author = "Darrin Blick",
                            ItemType = 0,
                            Location = "Vadahaven",
                            Status = 0,
                            Title = "Small Fresh Mouse",
                            Year = 2018
                        },
                        new
                        {
                            Id = 3,
                            Author = "Ervin Jacobs",
                            ItemType = 0,
                            Location = "New Beulahland",
                            Status = 0,
                            Title = "Sleek Plastic Bacon",
                            Year = 2020
                        },
                        new
                        {
                            Id = 4,
                            Author = "Elisa Kiehn",
                            ItemType = 2,
                            Location = "Shyannfort",
                            Status = 0,
                            Title = "Sleek Frozen Cheese",
                            Year = 2016
                        },
                        new
                        {
                            Id = 5,
                            Author = "Sally Toy",
                            ItemType = 0,
                            Location = "New Ross",
                            Status = 0,
                            Title = "Rustic Plastic Towels",
                            Year = 2006
                        },
                        new
                        {
                            Id = 6,
                            Author = "Kaylie Hoeger",
                            ItemType = 2,
                            Location = "West Antoinetteland",
                            Status = 0,
                            Title = "Gorgeous Concrete Computer",
                            Year = 2012
                        },
                        new
                        {
                            Id = 7,
                            Author = "Sidney West",
                            ItemType = 1,
                            Location = "East Kayleybury",
                            Status = 0,
                            Title = "Refined Concrete Table",
                            Year = 2019
                        },
                        new
                        {
                            Id = 8,
                            Author = "Charley Jerde",
                            ItemType = 1,
                            Location = "Fredamouth",
                            Status = 0,
                            Title = "Refined Soft Pants",
                            Year = 2001
                        },
                        new
                        {
                            Id = 9,
                            Author = "Breana Kessler",
                            ItemType = 1,
                            Location = "Lake Hannaburgh",
                            Status = 0,
                            Title = "Intelligent Fresh Hat",
                            Year = 2011
                        },
                        new
                        {
                            Id = 10,
                            Author = "Aryanna Haag",
                            ItemType = 1,
                            Location = "West Prince",
                            Status = 0,
                            Title = "Handmade Metal Computer",
                            Year = 2013
                        },
                        new
                        {
                            Id = 11,
                            Author = "Gwen Kuphal",
                            ItemType = 2,
                            Location = "New Eliezer",
                            Status = 0,
                            Title = "Intelligent Soft Sausages",
                            Year = 2022
                        },
                        new
                        {
                            Id = 12,
                            Author = "Alex Douglas",
                            ItemType = 1,
                            Location = "West Arch",
                            Status = 0,
                            Title = "Licensed Frozen Computer",
                            Year = 2023
                        },
                        new
                        {
                            Id = 13,
                            Author = "Elta Bosco",
                            ItemType = 2,
                            Location = "Conroyville",
                            Status = 0,
                            Title = "Licensed Rubber Salad",
                            Year = 2004
                        },
                        new
                        {
                            Id = 14,
                            Author = "Brian Pollich",
                            ItemType = 0,
                            Location = "Lake Jessica",
                            Status = 0,
                            Title = "Gorgeous Rubber Towels",
                            Year = 2021
                        },
                        new
                        {
                            Id = 15,
                            Author = "Flossie Zulauf",
                            ItemType = 2,
                            Location = "Shaynaview",
                            Status = 0,
                            Title = "Sleek Concrete Hat",
                            Year = 2004
                        },
                        new
                        {
                            Id = 16,
                            Author = "Lenore Gutmann",
                            ItemType = 3,
                            Location = "Treviontown",
                            Status = 0,
                            Title = "Ergonomic Rubber Bike",
                            Year = 2003
                        },
                        new
                        {
                            Id = 17,
                            Author = "Foster Mayer",
                            ItemType = 0,
                            Location = "Stantonville",
                            Status = 0,
                            Title = "Fantastic Steel Salad",
                            Year = 2005
                        },
                        new
                        {
                            Id = 18,
                            Author = "Alessandra Pollich",
                            ItemType = 1,
                            Location = "Pfannerstillside",
                            Status = 0,
                            Title = "Practical Soft Table",
                            Year = 2019
                        },
                        new
                        {
                            Id = 19,
                            Author = "Kaelyn Herman",
                            ItemType = 1,
                            Location = "Patriciafort",
                            Status = 0,
                            Title = "Small Granite Salad",
                            Year = 2012
                        },
                        new
                        {
                            Id = 20,
                            Author = "Weldon Windler",
                            ItemType = 3,
                            Location = "Judgeville",
                            Status = 0,
                            Title = "Practical Concrete Soap",
                            Year = 2013
                        },
                        new
                        {
                            Id = 21,
                            Author = "Florencio Cronin",
                            ItemType = 3,
                            Location = "Makenziebury",
                            Status = 0,
                            Title = "Awesome Metal Chicken",
                            Year = 2000
                        },
                        new
                        {
                            Id = 22,
                            Author = "Raheem Casper",
                            ItemType = 2,
                            Location = "South Arnulfo",
                            Status = 0,
                            Title = "Rustic Frozen Soap",
                            Year = 2013
                        },
                        new
                        {
                            Id = 23,
                            Author = "Maeve Ratke",
                            ItemType = 2,
                            Location = "East Werner",
                            Status = 0,
                            Title = "Generic Granite Salad",
                            Year = 2009
                        },
                        new
                        {
                            Id = 24,
                            Author = "Hailie Powlowski",
                            ItemType = 0,
                            Location = "Kellenton",
                            Status = 0,
                            Title = "Sleek Frozen Salad",
                            Year = 2023
                        },
                        new
                        {
                            Id = 25,
                            Author = "Deja Wiza",
                            ItemType = 2,
                            Location = "New Clovisland",
                            Status = 0,
                            Title = "Awesome Metal Gloves",
                            Year = 2012
                        },
                        new
                        {
                            Id = 26,
                            Author = "Dennis Prosacco",
                            ItemType = 1,
                            Location = "Pearliemouth",
                            Status = 0,
                            Title = "Tasty Frozen Tuna",
                            Year = 2020
                        },
                        new
                        {
                            Id = 27,
                            Author = "Moses Kris",
                            ItemType = 1,
                            Location = "New Brennafort",
                            Status = 0,
                            Title = "Awesome Fresh Table",
                            Year = 2023
                        },
                        new
                        {
                            Id = 28,
                            Author = "Bertrand Wintheiser",
                            ItemType = 3,
                            Location = "North Katlynn",
                            Status = 0,
                            Title = "Ergonomic Wooden Tuna",
                            Year = 2007
                        },
                        new
                        {
                            Id = 29,
                            Author = "Corrine Stroman",
                            ItemType = 3,
                            Location = "Jordihaven",
                            Status = 0,
                            Title = "Small Concrete Towels",
                            Year = 2000
                        },
                        new
                        {
                            Id = 30,
                            Author = "Chasity Wintheiser",
                            ItemType = 1,
                            Location = "New Dallas",
                            Status = 0,
                            Title = "Ergonomic Cotton Fish",
                            Year = 2017
                        },
                        new
                        {
                            Id = 31,
                            Author = "Reva Hamill",
                            ItemType = 2,
                            Location = "New Adellafurt",
                            Status = 0,
                            Title = "Sleek Cotton Pants",
                            Year = 2017
                        },
                        new
                        {
                            Id = 32,
                            Author = "Axel Erdman",
                            ItemType = 2,
                            Location = "Stromanfort",
                            Status = 0,
                            Title = "Intelligent Concrete Towels",
                            Year = 2011
                        },
                        new
                        {
                            Id = 33,
                            Author = "Grace Gottlieb",
                            ItemType = 0,
                            Location = "Boscoberg",
                            Status = 0,
                            Title = "Awesome Plastic Chips",
                            Year = 2000
                        },
                        new
                        {
                            Id = 34,
                            Author = "Leone Haag",
                            ItemType = 3,
                            Location = "Carrollshire",
                            Status = 0,
                            Title = "Fantastic Granite Car",
                            Year = 2014
                        },
                        new
                        {
                            Id = 35,
                            Author = "Greta Brown",
                            ItemType = 2,
                            Location = "Susiebury",
                            Status = 0,
                            Title = "Handcrafted Cotton Computer",
                            Year = 2015
                        },
                        new
                        {
                            Id = 36,
                            Author = "Jaren Fritsch",
                            ItemType = 3,
                            Location = "Leuschkeberg",
                            Status = 0,
                            Title = "Refined Frozen Chicken",
                            Year = 2013
                        },
                        new
                        {
                            Id = 37,
                            Author = "Sean Reynolds",
                            ItemType = 1,
                            Location = "Amaraside",
                            Status = 0,
                            Title = "Unbranded Steel Towels",
                            Year = 2015
                        },
                        new
                        {
                            Id = 38,
                            Author = "Darius Hessel",
                            ItemType = 2,
                            Location = "Theresiaville",
                            Status = 0,
                            Title = "Handcrafted Plastic Shoes",
                            Year = 2011
                        },
                        new
                        {
                            Id = 39,
                            Author = "Johnathan Swift",
                            ItemType = 2,
                            Location = "New Shanel",
                            Status = 0,
                            Title = "Practical Cotton Cheese",
                            Year = 2004
                        },
                        new
                        {
                            Id = 40,
                            Author = "Don Hammes",
                            ItemType = 0,
                            Location = "North Grayce",
                            Status = 0,
                            Title = "Tasty Frozen Table",
                            Year = 2004
                        },
                        new
                        {
                            Id = 41,
                            Author = "Lexi Hintz",
                            ItemType = 1,
                            Location = "North Judeshire",
                            Status = 0,
                            Title = "Handmade Steel Shoes",
                            Year = 2004
                        },
                        new
                        {
                            Id = 42,
                            Author = "Dana Kuphal",
                            ItemType = 1,
                            Location = "Beermouth",
                            Status = 0,
                            Title = "Rustic Soft Table",
                            Year = 2008
                        },
                        new
                        {
                            Id = 43,
                            Author = "Tate Bogisich",
                            ItemType = 3,
                            Location = "Krisborough",
                            Status = 0,
                            Title = "Incredible Wooden Sausages",
                            Year = 2006
                        },
                        new
                        {
                            Id = 44,
                            Author = "Kellen Hettinger",
                            ItemType = 0,
                            Location = "Ebbamouth",
                            Status = 0,
                            Title = "Fantastic Fresh Shirt",
                            Year = 2009
                        },
                        new
                        {
                            Id = 45,
                            Author = "Ray Considine",
                            ItemType = 1,
                            Location = "Hermistonland",
                            Status = 0,
                            Title = "Unbranded Frozen Chair",
                            Year = 2012
                        },
                        new
                        {
                            Id = 46,
                            Author = "Kristin Stiedemann",
                            ItemType = 2,
                            Location = "Breannemouth",
                            Status = 0,
                            Title = "Licensed Concrete Fish",
                            Year = 2023
                        },
                        new
                        {
                            Id = 47,
                            Author = "Modesta Murazik",
                            ItemType = 3,
                            Location = "West Mafaldaview",
                            Status = 0,
                            Title = "Gorgeous Concrete Towels",
                            Year = 2000
                        },
                        new
                        {
                            Id = 48,
                            Author = "Edd Ondricka",
                            ItemType = 3,
                            Location = "North Heleneside",
                            Status = 0,
                            Title = "Awesome Rubber Table",
                            Year = 2009
                        },
                        new
                        {
                            Id = 49,
                            Author = "Zander Upton",
                            ItemType = 0,
                            Location = "Gavinville",
                            Status = 0,
                            Title = "Rustic Steel Computer",
                            Year = 2000
                        },
                        new
                        {
                            Id = 50,
                            Author = "Myrtie Kihn",
                            ItemType = 3,
                            Location = "North Aubree",
                            Status = 0,
                            Title = "Licensed Fresh Salad",
                            Year = 2012
                        },
                        new
                        {
                            Id = 51,
                            Author = "Adelia Cronin",
                            ItemType = 0,
                            Location = "Roselynberg",
                            Status = 0,
                            Title = "Awesome Plastic Bike",
                            Year = 2008
                        },
                        new
                        {
                            Id = 52,
                            Author = "Gina Rosenbaum",
                            ItemType = 3,
                            Location = "Beckerside",
                            Status = 0,
                            Title = "Licensed Metal Shoes",
                            Year = 2010
                        },
                        new
                        {
                            Id = 53,
                            Author = "Garrison Trantow",
                            ItemType = 1,
                            Location = "Lake Dax",
                            Status = 0,
                            Title = "Tasty Rubber Shoes",
                            Year = 2021
                        },
                        new
                        {
                            Id = 54,
                            Author = "Scarlett Breitenberg",
                            ItemType = 0,
                            Location = "Bobbiechester",
                            Status = 0,
                            Title = "Gorgeous Metal Hat",
                            Year = 2000
                        },
                        new
                        {
                            Id = 55,
                            Author = "Jamir Haag",
                            ItemType = 0,
                            Location = "South Rachaelberg",
                            Status = 0,
                            Title = "Intelligent Plastic Shirt",
                            Year = 2015
                        },
                        new
                        {
                            Id = 56,
                            Author = "Vicky Schmitt",
                            ItemType = 0,
                            Location = "New Daphneefort",
                            Status = 0,
                            Title = "Licensed Frozen Car",
                            Year = 2014
                        },
                        new
                        {
                            Id = 57,
                            Author = "Alanis Gislason",
                            ItemType = 3,
                            Location = "Lake Roselynbury",
                            Status = 0,
                            Title = "Practical Frozen Cheese",
                            Year = 2007
                        },
                        new
                        {
                            Id = 58,
                            Author = "Hiram Kertzmann",
                            ItemType = 3,
                            Location = "East Richardstad",
                            Status = 0,
                            Title = "Practical Granite Fish",
                            Year = 2001
                        },
                        new
                        {
                            Id = 59,
                            Author = "Ceasar Hyatt",
                            ItemType = 3,
                            Location = "Lake Leslyside",
                            Status = 0,
                            Title = "Intelligent Soft Hat",
                            Year = 2019
                        },
                        new
                        {
                            Id = 60,
                            Author = "Dovie Ortiz",
                            ItemType = 2,
                            Location = "New Casper",
                            Status = 0,
                            Title = "Tasty Steel Mouse",
                            Year = 2014
                        },
                        new
                        {
                            Id = 61,
                            Author = "Forest Gerlach",
                            ItemType = 0,
                            Location = "Beckerland",
                            Status = 0,
                            Title = "Intelligent Soft Soap",
                            Year = 2016
                        },
                        new
                        {
                            Id = 62,
                            Author = "Jarrett McClure",
                            ItemType = 3,
                            Location = "Port Millerfort",
                            Status = 0,
                            Title = "Sleek Wooden Sausages",
                            Year = 2014
                        },
                        new
                        {
                            Id = 63,
                            Author = "Tania Schaefer",
                            ItemType = 3,
                            Location = "New Tomasaport",
                            Status = 0,
                            Title = "Generic Plastic Bike",
                            Year = 2020
                        },
                        new
                        {
                            Id = 64,
                            Author = "Mohammed Wilkinson",
                            ItemType = 3,
                            Location = "West Golden",
                            Status = 0,
                            Title = "Handmade Plastic Shoes",
                            Year = 2001
                        },
                        new
                        {
                            Id = 65,
                            Author = "Ayla Walter",
                            ItemType = 2,
                            Location = "Darrionport",
                            Status = 0,
                            Title = "Fantastic Cotton Bike",
                            Year = 2009
                        },
                        new
                        {
                            Id = 66,
                            Author = "Arvilla Davis",
                            ItemType = 2,
                            Location = "North Jayden",
                            Status = 0,
                            Title = "Small Concrete Cheese",
                            Year = 2001
                        },
                        new
                        {
                            Id = 67,
                            Author = "Ceasar Dibbert",
                            ItemType = 2,
                            Location = "East Cieloberg",
                            Status = 0,
                            Title = "Refined Cotton Chair",
                            Year = 2016
                        },
                        new
                        {
                            Id = 68,
                            Author = "Bria Okuneva",
                            ItemType = 2,
                            Location = "Marcellusside",
                            Status = 0,
                            Title = "Licensed Fresh Pizza",
                            Year = 2019
                        },
                        new
                        {
                            Id = 69,
                            Author = "Garland Torphy",
                            ItemType = 2,
                            Location = "Kristianshire",
                            Status = 0,
                            Title = "Ergonomic Steel Shirt",
                            Year = 2000
                        },
                        new
                        {
                            Id = 70,
                            Author = "Cora Kertzmann",
                            ItemType = 2,
                            Location = "Enoshaven",
                            Status = 0,
                            Title = "Ergonomic Cotton Gloves",
                            Year = 2011
                        },
                        new
                        {
                            Id = 71,
                            Author = "Rowan Hammes",
                            ItemType = 2,
                            Location = "New Don",
                            Status = 0,
                            Title = "Handmade Fresh Sausages",
                            Year = 2012
                        },
                        new
                        {
                            Id = 72,
                            Author = "Domingo Wilkinson",
                            ItemType = 1,
                            Location = "Dibbertton",
                            Status = 0,
                            Title = "Awesome Granite Bike",
                            Year = 2019
                        },
                        new
                        {
                            Id = 73,
                            Author = "Ole Jerde",
                            ItemType = 2,
                            Location = "Reesemouth",
                            Status = 0,
                            Title = "Ergonomic Wooden Tuna",
                            Year = 2021
                        },
                        new
                        {
                            Id = 74,
                            Author = "Austyn Runte",
                            ItemType = 1,
                            Location = "Port Deshawnview",
                            Status = 0,
                            Title = "Handmade Metal Pants",
                            Year = 2021
                        },
                        new
                        {
                            Id = 75,
                            Author = "Heather Bruen",
                            ItemType = 0,
                            Location = "Barrowsville",
                            Status = 0,
                            Title = "Generic Rubber Chicken",
                            Year = 2008
                        },
                        new
                        {
                            Id = 76,
                            Author = "Buddy Bradtke",
                            ItemType = 3,
                            Location = "Lake Wilmer",
                            Status = 0,
                            Title = "Refined Rubber Cheese",
                            Year = 2007
                        },
                        new
                        {
                            Id = 77,
                            Author = "Shaniya Littel",
                            ItemType = 0,
                            Location = "West Louisaland",
                            Status = 0,
                            Title = "Practical Steel Shirt",
                            Year = 2022
                        },
                        new
                        {
                            Id = 78,
                            Author = "Ola Kshlerin",
                            ItemType = 3,
                            Location = "Larsonland",
                            Status = 0,
                            Title = "Handmade Metal Chicken",
                            Year = 2010
                        },
                        new
                        {
                            Id = 79,
                            Author = "Seamus Luettgen",
                            ItemType = 3,
                            Location = "Lake Ervin",
                            Status = 0,
                            Title = "Unbranded Rubber Computer",
                            Year = 2022
                        },
                        new
                        {
                            Id = 80,
                            Author = "Vallie Wilkinson",
                            ItemType = 0,
                            Location = "Lake Adolphus",
                            Status = 0,
                            Title = "Generic Granite Computer",
                            Year = 2013
                        },
                        new
                        {
                            Id = 81,
                            Author = "Leatha Brakus",
                            ItemType = 3,
                            Location = "Port Vadaburgh",
                            Status = 0,
                            Title = "Practical Wooden Car",
                            Year = 2011
                        },
                        new
                        {
                            Id = 82,
                            Author = "Violette Bernhard",
                            ItemType = 1,
                            Location = "West Bobbieburgh",
                            Status = 0,
                            Title = "Fantastic Cotton Chips",
                            Year = 2001
                        },
                        new
                        {
                            Id = 83,
                            Author = "Jaime Feest",
                            ItemType = 1,
                            Location = "Marciafort",
                            Status = 0,
                            Title = "Incredible Concrete Chips",
                            Year = 2003
                        },
                        new
                        {
                            Id = 84,
                            Author = "Neha Emard",
                            ItemType = 1,
                            Location = "Port Noble",
                            Status = 0,
                            Title = "Handcrafted Fresh Fish",
                            Year = 2022
                        },
                        new
                        {
                            Id = 85,
                            Author = "Kurt Roberts",
                            ItemType = 0,
                            Location = "Boehmborough",
                            Status = 0,
                            Title = "Licensed Plastic Table",
                            Year = 2011
                        },
                        new
                        {
                            Id = 86,
                            Author = "Phoebe Hansen",
                            ItemType = 0,
                            Location = "Prohaskabury",
                            Status = 0,
                            Title = "Unbranded Rubber Pizza",
                            Year = 2016
                        },
                        new
                        {
                            Id = 87,
                            Author = "Donnie Beatty",
                            ItemType = 3,
                            Location = "New Preston",
                            Status = 0,
                            Title = "Licensed Granite Ball",
                            Year = 2008
                        },
                        new
                        {
                            Id = 88,
                            Author = "Victor Halvorson",
                            ItemType = 3,
                            Location = "New Ari",
                            Status = 0,
                            Title = "Sleek Fresh Computer",
                            Year = 2003
                        },
                        new
                        {
                            Id = 89,
                            Author = "Sam Schimmel",
                            ItemType = 2,
                            Location = "East Alberto",
                            Status = 0,
                            Title = "Incredible Fresh Hat",
                            Year = 2006
                        },
                        new
                        {
                            Id = 90,
                            Author = "Neil Klocko",
                            ItemType = 3,
                            Location = "Trantowmouth",
                            Status = 0,
                            Title = "Small Granite Towels",
                            Year = 2022
                        },
                        new
                        {
                            Id = 91,
                            Author = "Jada Trantow",
                            ItemType = 1,
                            Location = "Weimannburgh",
                            Status = 0,
                            Title = "Ergonomic Concrete Shirt",
                            Year = 2014
                        },
                        new
                        {
                            Id = 92,
                            Author = "Arvel Gottlieb",
                            ItemType = 0,
                            Location = "Lindaburgh",
                            Status = 0,
                            Title = "Fantastic Rubber Towels",
                            Year = 2007
                        },
                        new
                        {
                            Id = 93,
                            Author = "Melyna Quitzon",
                            ItemType = 1,
                            Location = "Wardfort",
                            Status = 0,
                            Title = "Handcrafted Steel Tuna",
                            Year = 2020
                        },
                        new
                        {
                            Id = 94,
                            Author = "Titus Gerhold",
                            ItemType = 2,
                            Location = "South Elena",
                            Status = 0,
                            Title = "Ergonomic Plastic Sausages",
                            Year = 2007
                        },
                        new
                        {
                            Id = 95,
                            Author = "Jalon Boehm",
                            ItemType = 0,
                            Location = "Stromanburgh",
                            Status = 0,
                            Title = "Intelligent Concrete Mouse",
                            Year = 2007
                        },
                        new
                        {
                            Id = 96,
                            Author = "Mathew Wilkinson",
                            ItemType = 1,
                            Location = "North Baylee",
                            Status = 0,
                            Title = "Incredible Granite Bike",
                            Year = 2002
                        },
                        new
                        {
                            Id = 97,
                            Author = "Rowland Swaniawski",
                            ItemType = 1,
                            Location = "New Jamarcus",
                            Status = 0,
                            Title = "Unbranded Fresh Fish",
                            Year = 2019
                        },
                        new
                        {
                            Id = 98,
                            Author = "Donnie Murray",
                            ItemType = 0,
                            Location = "West Austyn",
                            Status = 0,
                            Title = "Unbranded Rubber Table",
                            Year = 2009
                        },
                        new
                        {
                            Id = 99,
                            Author = "Assunta Olson",
                            ItemType = 2,
                            Location = "Schmelerview",
                            Status = 0,
                            Title = "Unbranded Frozen Chicken",
                            Year = 2009
                        },
                        new
                        {
                            Id = 100,
                            Author = "Devonte Upton",
                            ItemType = 1,
                            Location = "New David",
                            Status = 0,
                            Title = "Generic Steel Fish",
                            Year = 2022
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("UserId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 71,
                            LoanDate = new DateTime(2022, 12, 24, 3, 34, 46, 895, DateTimeKind.Local).AddTicks(7595),
                            ReservationId = 1,
                            ReturnDate = new DateTime(2023, 10, 12, 7, 15, 2, 573, DateTimeKind.Local).AddTicks(2475),
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 37,
                            LoanDate = new DateTime(2023, 2, 13, 5, 15, 24, 317, DateTimeKind.Local).AddTicks(3422),
                            ReservationId = 1,
                            ReturnDate = new DateTime(2023, 7, 18, 15, 45, 58, 256, DateTimeKind.Local).AddTicks(900),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 39,
                            LoanDate = new DateTime(2022, 7, 27, 1, 45, 35, 520, DateTimeKind.Local).AddTicks(2638),
                            ReservationId = 4,
                            ReturnDate = new DateTime(2023, 12, 26, 13, 20, 41, 142, DateTimeKind.Local).AddTicks(6509),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 69,
                            LoanDate = new DateTime(2023, 1, 8, 18, 17, 19, 650, DateTimeKind.Local).AddTicks(5028),
                            ReservationId = 3,
                            ReturnDate = new DateTime(2024, 3, 12, 22, 17, 56, 759, DateTimeKind.Local).AddTicks(7162),
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 64,
                            LoanDate = new DateTime(2022, 9, 22, 16, 12, 16, 753, DateTimeKind.Local).AddTicks(7201),
                            ReservationId = 5,
                            ReturnDate = new DateTime(2024, 2, 21, 8, 18, 52, 147, DateTimeKind.Local).AddTicks(1411),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "New Kellieport"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Rebekahchester"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Metzside"
                        },
                        new
                        {
                            Id = 4,
                            LocationName = "Annaliseview"
                        },
                        new
                        {
                            Id = 5,
                            LocationName = "Ramonafort"
                        },
                        new
                        {
                            Id = 6,
                            LocationName = "East Sanfordville"
                        },
                        new
                        {
                            Id = 7,
                            LocationName = "Nyasiaton"
                        },
                        new
                        {
                            Id = 8,
                            LocationName = "Rippinbury"
                        },
                        new
                        {
                            Id = 9,
                            LocationName = "West Chloeport"
                        },
                        new
                        {
                            Id = 10,
                            LocationName = "Lake Royceton"
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 74,
                            ReservationDate = new DateTime(2022, 11, 2, 15, 27, 42, 105, DateTimeKind.Local).AddTicks(2630),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 12,
                            ReservationDate = new DateTime(2023, 4, 27, 17, 18, 29, 754, DateTimeKind.Local).AddTicks(3691),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 80,
                            ReservationDate = new DateTime(2022, 12, 23, 12, 6, 43, 899, DateTimeKind.Local).AddTicks(468),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 86,
                            ReservationDate = new DateTime(2022, 11, 8, 11, 44, 51, 596, DateTimeKind.Local).AddTicks(8807),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 24,
                            ReservationDate = new DateTime(2023, 1, 31, 4, 41, 16, 531, DateTimeKind.Local).AddTicks(2416),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSubscription")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaxItemsPerYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ba4ac69-f29f-43fd-9696-ceb06138acf3",
                            Email = "admin@example.com",
                            EmailConfirmed = true,
                            HasPaid = false,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Administrator",
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEbnDbJCy6GyFqc4aqjhCWjgbXVC8DkDjDHzIn6/ayEryXZYXz6pMi2GkBnS9z8kpA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5544687f-363a-45f3-89cc-9acd48baa30c",
                            SubscriptionType = "4",
                            TwoFactorEnabled = false,
                            Type = 2,
                            UserName = "admin@example.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "47814f33-f5fc-42ff-970d-86446931724d",
                            Email = "librarian@example.com",
                            EmailConfirmed = true,
                            HasPaid = false,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Librarian",
                            NormalizedEmail = "LIBRARIAN@EXAMPLE.COM",
                            NormalizedUserName = "LIBRARIAN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHg7O4Hd5p/v5KxBgHt7EBM1ezQ0bn7JJwHUVyWW+epwI69/DVYXEHJwVHqjsJRlyg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e4fa7332-4699-40da-8599-2a1acc5f3135",
                            SubscriptionType = "3",
                            TwoFactorEnabled = false,
                            Type = 1,
                            UserName = "librarian@example.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "39a6bd70-a941-416e-961b-262b9a439102",
                            Email = "member@example.com",
                            EmailConfirmed = true,
                            HasPaid = false,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Member",
                            NormalizedEmail = "MEMBER@EXAMPLE.COM",
                            NormalizedUserName = "MEMBER@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOdTDHzgeNSrcS8npdCgKPLnLnkMTSaKjpNfqkCogw3XhtB1At6nov0j/ojypOnYMg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6ea92023-bb68-4d33-b22e-87c294b75bb8",
                            SubscriptionType = "2",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "member@example.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a7e7de23-fa6d-4b47-917a-0a857622e8d5",
                            Email = "Amari18@hotmail.com",
                            EmailConfirmed = true,
                            HasPaid = false,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Shanelle Strosin",
                            NormalizedEmail = "EDUARDO.RAU@HOTMAIL.COM",
                            NormalizedUserName = "REANNA_WALSH@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECYeJtSdJ3OejEzVOiZvPIM1QE8dZQfMB/4friTSgVj+13ehpwCfRaJNekjvL3LiUg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b7ce3ae8-f9a8-47ae-9fcf-8fa77c5ea64c",
                            SubscriptionType = "1",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Jaquan_Walsh@hotmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ef57db1-05c8-4168-ad54-3e6fe2805329",
                            Email = "Alysson_Orn@yahoo.com",
                            EmailConfirmed = true,
                            HasPaid = false,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Adolph Hettinger",
                            NormalizedEmail = "JERMAIN43@YAHOO.COM",
                            NormalizedUserName = "MALCOLM.HAYES54@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE6spGID3Gw5zQ1kU9oGTGIO3kH4VxxofDKm4H2K0NhhZPjtYqyf1KxM3BeyW7Re2g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "adb15e4f-a084-4331-823c-cb16d94163f2",
                            SubscriptionType = "3",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Berry.Hansen25@yahoo.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f056efda-f6b7-41c7-93b1-447ecf1f7559",
                            Email = "Prince24@yahoo.com",
                            EmailConfirmed = true,
                            HasPaid = false,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Kamille Jacobi",
                            NormalizedEmail = "DON25@YAHOO.COM",
                            NormalizedUserName = "PEYTON_COLE@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBF8l5EL5yS2RWZu18iAGD6XBx8qHvoED1JVzBazgqpjZr/uy81UvsbYrCBpDVG44w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "efe1cbdf-36f1-44e5-b249-66ed69b7ef7e",
                            SubscriptionType = "4",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Lance_Berge@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BiebWebApp.Models.Invoice", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Loan", b =>
                {
                    b.HasOne("BiebWebApp.Models.Item", "Item")
                        .WithMany("Loans")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.Reservation", "Reservation")
                        .WithMany("Loans")
                        .HasForeignKey("ReservationId");

                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Reservation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.HasOne("BiebWebApp.Models.Item", "Item")
                        .WithMany("Reservations")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BiebWebApp.Models.Item", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("BiebWebApp.Models.User", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
