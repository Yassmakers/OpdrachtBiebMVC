// <auto-generated />
using System;
using BiebWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiebWebApp.Migrations
{
    [DbContext(typeof(BiebWebAppContext))]
    partial class BiebWebAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BiebWebApp.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 87.10m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            Amount = 52.33m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 48.71m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 74.75m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 31.70m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Amount = 48.80m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Amount = 39.49m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Amount = 17.08m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            Amount = 40.29m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            Amount = 96.29m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            Amount = 71.48m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            Amount = 19.18m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 13,
                            Amount = 22.66m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 14,
                            Amount = 91.98m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 15,
                            Amount = 88.09m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 16,
                            Amount = 66.12m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 17,
                            Amount = 82.83m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 18,
                            Amount = 88.13m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 19,
                            Amount = 52.18m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 20,
                            Amount = 96.14m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 21,
                            Amount = 89.36m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 22,
                            Amount = 55.03m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 23,
                            Amount = 68.13m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 24,
                            Amount = 10.31m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 25,
                            Amount = 85.75m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 26,
                            Amount = 44.99m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 27,
                            Amount = 63.91m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 28,
                            Amount = 29.48m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 29,
                            Amount = 95.40m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 30,
                            Amount = 89.79m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 31,
                            Amount = 83.37m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 32,
                            Amount = 55.16m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 33,
                            Amount = 61.11m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 34,
                            Amount = 83.20m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 35,
                            Amount = 48.17m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 36,
                            Amount = 83.36m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 37,
                            Amount = 72.69m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 38,
                            Amount = 32.85m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 39,
                            Amount = 92.68m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 40,
                            Amount = 36.45m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 41,
                            Amount = 99.17m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 42,
                            Amount = 48.11m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 43,
                            Amount = 60.63m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 44,
                            Amount = 12.11m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 45,
                            Amount = 72.92m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 46,
                            Amount = 87.02m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 47,
                            Amount = 49.69m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 48,
                            Amount = 33.56m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 49,
                            Amount = 37.38m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 50,
                            Amount = 38.00m,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceType = 0,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Darren Morar",
                            ItemType = 2,
                            Location = "Gwendolynland",
                            Status = 0,
                            Title = "Handcrafted Plastic Ball",
                            Year = 2022
                        },
                        new
                        {
                            Id = 2,
                            Author = "Malika Barrows",
                            ItemType = 3,
                            Location = "Carmellaville",
                            Status = 0,
                            Title = "Sleek Plastic Chair",
                            Year = 2018
                        },
                        new
                        {
                            Id = 3,
                            Author = "Tania Daniel",
                            ItemType = 1,
                            Location = "Lake Eulafurt",
                            Status = 0,
                            Title = "Small Rubber Salad",
                            Year = 2018
                        },
                        new
                        {
                            Id = 4,
                            Author = "Mario Rolfson",
                            ItemType = 3,
                            Location = "West Edythshire",
                            Status = 0,
                            Title = "Practical Wooden Ball",
                            Year = 2003
                        },
                        new
                        {
                            Id = 5,
                            Author = "Tatyana Gottlieb",
                            ItemType = 3,
                            Location = "Richieville",
                            Status = 0,
                            Title = "Unbranded Fresh Pizza",
                            Year = 2018
                        },
                        new
                        {
                            Id = 6,
                            Author = "Urban Price",
                            ItemType = 1,
                            Location = "North Dion",
                            Status = 0,
                            Title = "Ergonomic Rubber Pizza",
                            Year = 2023
                        },
                        new
                        {
                            Id = 7,
                            Author = "Alphonso Robel",
                            ItemType = 1,
                            Location = "Bauchton",
                            Status = 0,
                            Title = "Refined Granite Pizza",
                            Year = 2000
                        },
                        new
                        {
                            Id = 8,
                            Author = "Santino Raynor",
                            ItemType = 1,
                            Location = "Bauchland",
                            Status = 0,
                            Title = "Sleek Granite Cheese",
                            Year = 2013
                        },
                        new
                        {
                            Id = 9,
                            Author = "Hailie Herman",
                            ItemType = 1,
                            Location = "Bayerport",
                            Status = 0,
                            Title = "Handcrafted Granite Towels",
                            Year = 2006
                        },
                        new
                        {
                            Id = 10,
                            Author = "Kendra Volkman",
                            ItemType = 1,
                            Location = "Lake Velmaland",
                            Status = 0,
                            Title = "Intelligent Granite Towels",
                            Year = 2012
                        },
                        new
                        {
                            Id = 11,
                            Author = "Bell Goodwin",
                            ItemType = 3,
                            Location = "North Dawsonchester",
                            Status = 0,
                            Title = "Refined Cotton Bike",
                            Year = 2023
                        },
                        new
                        {
                            Id = 12,
                            Author = "Paris Bailey",
                            ItemType = 0,
                            Location = "East Jessy",
                            Status = 0,
                            Title = "Incredible Rubber Fish",
                            Year = 2023
                        },
                        new
                        {
                            Id = 13,
                            Author = "Miles Satterfield",
                            ItemType = 1,
                            Location = "Ramonton",
                            Status = 0,
                            Title = "Awesome Granite Shirt",
                            Year = 2017
                        },
                        new
                        {
                            Id = 14,
                            Author = "Milton Crist",
                            ItemType = 2,
                            Location = "North Connor",
                            Status = 0,
                            Title = "Refined Plastic Table",
                            Year = 2005
                        },
                        new
                        {
                            Id = 15,
                            Author = "Dalton Pagac",
                            ItemType = 0,
                            Location = "Hartmannland",
                            Status = 0,
                            Title = "Refined Steel Chicken",
                            Year = 2017
                        },
                        new
                        {
                            Id = 16,
                            Author = "Kara Cummerata",
                            ItemType = 1,
                            Location = "Gibsonmouth",
                            Status = 0,
                            Title = "Intelligent Wooden Ball",
                            Year = 2021
                        },
                        new
                        {
                            Id = 17,
                            Author = "Jaydon Erdman",
                            ItemType = 2,
                            Location = "Sadyeberg",
                            Status = 0,
                            Title = "Licensed Cotton Table",
                            Year = 2009
                        },
                        new
                        {
                            Id = 18,
                            Author = "Chelsie Wolf",
                            ItemType = 3,
                            Location = "Ednachester",
                            Status = 0,
                            Title = "Handcrafted Wooden Pants",
                            Year = 2012
                        },
                        new
                        {
                            Id = 19,
                            Author = "Bessie Koelpin",
                            ItemType = 0,
                            Location = "Adamsville",
                            Status = 0,
                            Title = "Ergonomic Plastic Table",
                            Year = 2009
                        },
                        new
                        {
                            Id = 20,
                            Author = "Addison Douglas",
                            ItemType = 1,
                            Location = "South Gordon",
                            Status = 0,
                            Title = "Handcrafted Plastic Keyboard",
                            Year = 2007
                        },
                        new
                        {
                            Id = 21,
                            Author = "Keara Dibbert",
                            ItemType = 1,
                            Location = "New Macie",
                            Status = 0,
                            Title = "Incredible Plastic Pizza",
                            Year = 2021
                        },
                        new
                        {
                            Id = 22,
                            Author = "Ernest Jones",
                            ItemType = 2,
                            Location = "West Kadeview",
                            Status = 0,
                            Title = "Generic Granite Chicken",
                            Year = 2001
                        },
                        new
                        {
                            Id = 23,
                            Author = "Eddie Streich",
                            ItemType = 3,
                            Location = "East Mario",
                            Status = 0,
                            Title = "Tasty Wooden Gloves",
                            Year = 2020
                        },
                        new
                        {
                            Id = 24,
                            Author = "Dillon Brekke",
                            ItemType = 0,
                            Location = "Pagacburgh",
                            Status = 0,
                            Title = "Tasty Cotton Chips",
                            Year = 2020
                        },
                        new
                        {
                            Id = 25,
                            Author = "Rodger Tillman",
                            ItemType = 0,
                            Location = "New Clemens",
                            Status = 0,
                            Title = "Licensed Granite Soap",
                            Year = 2005
                        },
                        new
                        {
                            Id = 26,
                            Author = "Chester Lebsack",
                            ItemType = 2,
                            Location = "Prosaccoview",
                            Status = 0,
                            Title = "Handcrafted Soft Fish",
                            Year = 2006
                        },
                        new
                        {
                            Id = 27,
                            Author = "Chris Marvin",
                            ItemType = 0,
                            Location = "Lake Darianview",
                            Status = 0,
                            Title = "Tasty Plastic Fish",
                            Year = 2008
                        },
                        new
                        {
                            Id = 28,
                            Author = "Kristian Mohr",
                            ItemType = 1,
                            Location = "Port Abdullah",
                            Status = 0,
                            Title = "Handmade Metal Gloves",
                            Year = 2016
                        },
                        new
                        {
                            Id = 29,
                            Author = "Ruthie Yundt",
                            ItemType = 0,
                            Location = "Fisherbury",
                            Status = 0,
                            Title = "Ergonomic Steel Table",
                            Year = 2002
                        },
                        new
                        {
                            Id = 30,
                            Author = "Alessandra Schulist",
                            ItemType = 1,
                            Location = "New Jadonside",
                            Status = 0,
                            Title = "Tasty Soft Fish",
                            Year = 2017
                        },
                        new
                        {
                            Id = 31,
                            Author = "Trevion Batz",
                            ItemType = 1,
                            Location = "South Narciso",
                            Status = 0,
                            Title = "Incredible Concrete Car",
                            Year = 2005
                        },
                        new
                        {
                            Id = 32,
                            Author = "Ocie Baumbach",
                            ItemType = 1,
                            Location = "Gilbertobury",
                            Status = 0,
                            Title = "Sleek Fresh Ball",
                            Year = 2012
                        },
                        new
                        {
                            Id = 33,
                            Author = "Lenora Lebsack",
                            ItemType = 2,
                            Location = "Port Sheridan",
                            Status = 0,
                            Title = "Licensed Rubber Towels",
                            Year = 2006
                        },
                        new
                        {
                            Id = 34,
                            Author = "Evalyn Gibson",
                            ItemType = 1,
                            Location = "Port Shayna",
                            Status = 0,
                            Title = "Unbranded Rubber Soap",
                            Year = 2000
                        },
                        new
                        {
                            Id = 35,
                            Author = "Sophie Rolfson",
                            ItemType = 2,
                            Location = "New Brandonland",
                            Status = 0,
                            Title = "Licensed Fresh Chicken",
                            Year = 2017
                        },
                        new
                        {
                            Id = 36,
                            Author = "Maynard Bradtke",
                            ItemType = 1,
                            Location = "East Francoport",
                            Status = 0,
                            Title = "Licensed Plastic Soap",
                            Year = 2006
                        },
                        new
                        {
                            Id = 37,
                            Author = "Abagail Block",
                            ItemType = 0,
                            Location = "Gonzalohaven",
                            Status = 0,
                            Title = "Gorgeous Wooden Sausages",
                            Year = 2006
                        },
                        new
                        {
                            Id = 38,
                            Author = "Ida Cruickshank",
                            ItemType = 0,
                            Location = "Port Nolan",
                            Status = 0,
                            Title = "Awesome Metal Towels",
                            Year = 2007
                        },
                        new
                        {
                            Id = 39,
                            Author = "Jadon Swaniawski",
                            ItemType = 2,
                            Location = "New Mallorybury",
                            Status = 0,
                            Title = "Tasty Plastic Table",
                            Year = 2009
                        },
                        new
                        {
                            Id = 40,
                            Author = "Kaya Gusikowski",
                            ItemType = 2,
                            Location = "Lake Gonzaloland",
                            Status = 0,
                            Title = "Practical Cotton Towels",
                            Year = 2016
                        },
                        new
                        {
                            Id = 41,
                            Author = "Alvera Walter",
                            ItemType = 1,
                            Location = "West Darylhaven",
                            Status = 0,
                            Title = "Handcrafted Concrete Pants",
                            Year = 2005
                        },
                        new
                        {
                            Id = 42,
                            Author = "Hildegard Gottlieb",
                            ItemType = 3,
                            Location = "McClureville",
                            Status = 0,
                            Title = "Intelligent Fresh Pants",
                            Year = 2006
                        },
                        new
                        {
                            Id = 43,
                            Author = "Cathrine Farrell",
                            ItemType = 3,
                            Location = "Jacquesville",
                            Status = 0,
                            Title = "Licensed Concrete Chair",
                            Year = 2006
                        },
                        new
                        {
                            Id = 44,
                            Author = "Anita Von",
                            ItemType = 1,
                            Location = "East Dulcetown",
                            Status = 0,
                            Title = "Practical Metal Soap",
                            Year = 2009
                        },
                        new
                        {
                            Id = 45,
                            Author = "Stan Greenholt",
                            ItemType = 0,
                            Location = "Port Elisabethberg",
                            Status = 0,
                            Title = "Fantastic Fresh Cheese",
                            Year = 2005
                        },
                        new
                        {
                            Id = 46,
                            Author = "Ernestine Bradtke",
                            ItemType = 1,
                            Location = "Josianneborough",
                            Status = 0,
                            Title = "Sleek Wooden Towels",
                            Year = 2016
                        },
                        new
                        {
                            Id = 47,
                            Author = "Rylee Cartwright",
                            ItemType = 0,
                            Location = "Alenaport",
                            Status = 0,
                            Title = "Sleek Frozen Soap",
                            Year = 2005
                        },
                        new
                        {
                            Id = 48,
                            Author = "Otho Emmerich",
                            ItemType = 3,
                            Location = "Mayershire",
                            Status = 0,
                            Title = "Licensed Wooden Computer",
                            Year = 2022
                        },
                        new
                        {
                            Id = 49,
                            Author = "Emilia Cummings",
                            ItemType = 2,
                            Location = "Kailynport",
                            Status = 0,
                            Title = "Ergonomic Plastic Shoes",
                            Year = 2004
                        },
                        new
                        {
                            Id = 50,
                            Author = "Daija Bartoletti",
                            ItemType = 0,
                            Location = "New Adrienburgh",
                            Status = 0,
                            Title = "Licensed Metal Pants",
                            Year = 2004
                        },
                        new
                        {
                            Id = 51,
                            Author = "Adrianna Moen",
                            ItemType = 3,
                            Location = "Hillsstad",
                            Status = 0,
                            Title = "Licensed Concrete Computer",
                            Year = 2002
                        },
                        new
                        {
                            Id = 52,
                            Author = "Reid Robel",
                            ItemType = 3,
                            Location = "Aminaview",
                            Status = 0,
                            Title = "Rustic Wooden Cheese",
                            Year = 2002
                        },
                        new
                        {
                            Id = 53,
                            Author = "Joannie Johnson",
                            ItemType = 0,
                            Location = "Henrybury",
                            Status = 0,
                            Title = "Rustic Frozen Shirt",
                            Year = 2006
                        },
                        new
                        {
                            Id = 54,
                            Author = "Micheal Simonis",
                            ItemType = 2,
                            Location = "Raynorland",
                            Status = 0,
                            Title = "Intelligent Wooden Chicken",
                            Year = 2012
                        },
                        new
                        {
                            Id = 55,
                            Author = "Andreane Borer",
                            ItemType = 0,
                            Location = "Lake Hesterfort",
                            Status = 0,
                            Title = "Ergonomic Plastic Shirt",
                            Year = 2004
                        },
                        new
                        {
                            Id = 56,
                            Author = "Helen Davis",
                            ItemType = 2,
                            Location = "East Mitchellview",
                            Status = 0,
                            Title = "Licensed Rubber Shirt",
                            Year = 2015
                        },
                        new
                        {
                            Id = 57,
                            Author = "Imani Barton",
                            ItemType = 1,
                            Location = "East Noemistad",
                            Status = 0,
                            Title = "Small Soft Ball",
                            Year = 2010
                        },
                        new
                        {
                            Id = 58,
                            Author = "Gustave Balistreri",
                            ItemType = 3,
                            Location = "Ericview",
                            Status = 0,
                            Title = "Refined Wooden Shoes",
                            Year = 2000
                        },
                        new
                        {
                            Id = 59,
                            Author = "Leon Emmerich",
                            ItemType = 0,
                            Location = "Baumbachfurt",
                            Status = 0,
                            Title = "Rustic Steel Pants",
                            Year = 2023
                        },
                        new
                        {
                            Id = 60,
                            Author = "Pamela Carroll",
                            ItemType = 1,
                            Location = "North Jevon",
                            Status = 0,
                            Title = "Gorgeous Soft Mouse",
                            Year = 2011
                        },
                        new
                        {
                            Id = 61,
                            Author = "Celestino Krajcik",
                            ItemType = 0,
                            Location = "Eusebiochester",
                            Status = 0,
                            Title = "Sleek Granite Soap",
                            Year = 2007
                        },
                        new
                        {
                            Id = 62,
                            Author = "Jamarcus Yundt",
                            ItemType = 1,
                            Location = "Lake Narciso",
                            Status = 0,
                            Title = "Fantastic Steel Chicken",
                            Year = 2005
                        },
                        new
                        {
                            Id = 63,
                            Author = "Beverly Macejkovic",
                            ItemType = 0,
                            Location = "Batzchester",
                            Status = 0,
                            Title = "Gorgeous Concrete Salad",
                            Year = 2018
                        },
                        new
                        {
                            Id = 64,
                            Author = "Zachary Graham",
                            ItemType = 0,
                            Location = "Boyerside",
                            Status = 0,
                            Title = "Sleek Cotton Shirt",
                            Year = 2015
                        },
                        new
                        {
                            Id = 65,
                            Author = "Vern O'Keefe",
                            ItemType = 1,
                            Location = "Dickinsonland",
                            Status = 0,
                            Title = "Licensed Plastic Tuna",
                            Year = 2010
                        },
                        new
                        {
                            Id = 66,
                            Author = "Kara Jones",
                            ItemType = 1,
                            Location = "Malcolmfort",
                            Status = 0,
                            Title = "Small Wooden Chair",
                            Year = 2018
                        },
                        new
                        {
                            Id = 67,
                            Author = "Demetris Welch",
                            ItemType = 3,
                            Location = "Port Floton",
                            Status = 0,
                            Title = "Small Granite Table",
                            Year = 2020
                        },
                        new
                        {
                            Id = 68,
                            Author = "Aimee Wiza",
                            ItemType = 0,
                            Location = "New Oswaldoborough",
                            Status = 0,
                            Title = "Sleek Frozen Soap",
                            Year = 2015
                        },
                        new
                        {
                            Id = 69,
                            Author = "Antonette Olson",
                            ItemType = 0,
                            Location = "East Bridgettechester",
                            Status = 0,
                            Title = "Ergonomic Granite Sausages",
                            Year = 2015
                        },
                        new
                        {
                            Id = 70,
                            Author = "Kristy MacGyver",
                            ItemType = 0,
                            Location = "Emmieside",
                            Status = 0,
                            Title = "Intelligent Plastic Gloves",
                            Year = 2015
                        },
                        new
                        {
                            Id = 71,
                            Author = "Porter Kulas",
                            ItemType = 3,
                            Location = "Hammesburgh",
                            Status = 0,
                            Title = "Sleek Granite Soap",
                            Year = 2005
                        },
                        new
                        {
                            Id = 72,
                            Author = "Carson Conn",
                            ItemType = 3,
                            Location = "Macland",
                            Status = 0,
                            Title = "Licensed Rubber Sausages",
                            Year = 2009
                        },
                        new
                        {
                            Id = 73,
                            Author = "Einar Satterfield",
                            ItemType = 2,
                            Location = "Alvahside",
                            Status = 0,
                            Title = "Tasty Plastic Keyboard",
                            Year = 2015
                        },
                        new
                        {
                            Id = 74,
                            Author = "Dalton Schinner",
                            ItemType = 2,
                            Location = "Lake Annamarie",
                            Status = 0,
                            Title = "Handmade Wooden Bike",
                            Year = 2003
                        },
                        new
                        {
                            Id = 75,
                            Author = "Norval Reinger",
                            ItemType = 2,
                            Location = "Shanonfort",
                            Status = 0,
                            Title = "Refined Frozen Computer",
                            Year = 2001
                        },
                        new
                        {
                            Id = 76,
                            Author = "Taylor Adams",
                            ItemType = 0,
                            Location = "South Laceyfurt",
                            Status = 0,
                            Title = "Small Fresh Pizza",
                            Year = 2019
                        },
                        new
                        {
                            Id = 77,
                            Author = "Sigurd Gleichner",
                            ItemType = 1,
                            Location = "Lesleyfort",
                            Status = 0,
                            Title = "Handmade Rubber Cheese",
                            Year = 2017
                        },
                        new
                        {
                            Id = 78,
                            Author = "Jordi Oberbrunner",
                            ItemType = 1,
                            Location = "Port Kenyatta",
                            Status = 0,
                            Title = "Incredible Steel Cheese",
                            Year = 2004
                        },
                        new
                        {
                            Id = 79,
                            Author = "Maryse Lehner",
                            ItemType = 0,
                            Location = "South Bridgettemouth",
                            Status = 0,
                            Title = "Sleek Wooden Pizza",
                            Year = 2020
                        },
                        new
                        {
                            Id = 80,
                            Author = "Zita Feest",
                            ItemType = 1,
                            Location = "Larsonburgh",
                            Status = 0,
                            Title = "Gorgeous Wooden Salad",
                            Year = 2008
                        },
                        new
                        {
                            Id = 81,
                            Author = "Viva Windler",
                            ItemType = 1,
                            Location = "West Garrick",
                            Status = 0,
                            Title = "Sleek Frozen Bacon",
                            Year = 2023
                        },
                        new
                        {
                            Id = 82,
                            Author = "Loy Ryan",
                            ItemType = 2,
                            Location = "Alexisstad",
                            Status = 0,
                            Title = "Ergonomic Cotton Ball",
                            Year = 2005
                        },
                        new
                        {
                            Id = 83,
                            Author = "Steve Ortiz",
                            ItemType = 0,
                            Location = "New Manuel",
                            Status = 0,
                            Title = "Handmade Granite Bike",
                            Year = 2003
                        },
                        new
                        {
                            Id = 84,
                            Author = "River Parker",
                            ItemType = 1,
                            Location = "Lake Israel",
                            Status = 0,
                            Title = "Gorgeous Metal Shirt",
                            Year = 2009
                        },
                        new
                        {
                            Id = 85,
                            Author = "Rhoda Moore",
                            ItemType = 1,
                            Location = "North Jalynborough",
                            Status = 0,
                            Title = "Sleek Fresh Tuna",
                            Year = 2007
                        },
                        new
                        {
                            Id = 86,
                            Author = "Antonette Feeney",
                            ItemType = 1,
                            Location = "Feeneyfort",
                            Status = 0,
                            Title = "Gorgeous Plastic Soap",
                            Year = 2005
                        },
                        new
                        {
                            Id = 87,
                            Author = "Gavin Kunze",
                            ItemType = 1,
                            Location = "Hudsonview",
                            Status = 0,
                            Title = "Licensed Concrete Tuna",
                            Year = 2021
                        },
                        new
                        {
                            Id = 88,
                            Author = "Glen Nicolas",
                            ItemType = 0,
                            Location = "Port Elton",
                            Status = 0,
                            Title = "Practical Plastic Chair",
                            Year = 2003
                        },
                        new
                        {
                            Id = 89,
                            Author = "Hollis Kuphal",
                            ItemType = 0,
                            Location = "West Duncanmouth",
                            Status = 0,
                            Title = "Rustic Concrete Computer",
                            Year = 2002
                        },
                        new
                        {
                            Id = 90,
                            Author = "Carolyne Koss",
                            ItemType = 0,
                            Location = "West Adelineside",
                            Status = 0,
                            Title = "Intelligent Concrete Towels",
                            Year = 2001
                        },
                        new
                        {
                            Id = 91,
                            Author = "Alexie Green",
                            ItemType = 2,
                            Location = "Daytonville",
                            Status = 0,
                            Title = "Tasty Rubber Keyboard",
                            Year = 2014
                        },
                        new
                        {
                            Id = 92,
                            Author = "Josue Mertz",
                            ItemType = 3,
                            Location = "Owenview",
                            Status = 0,
                            Title = "Incredible Frozen Chicken",
                            Year = 2014
                        },
                        new
                        {
                            Id = 93,
                            Author = "Catalina Oberbrunner",
                            ItemType = 2,
                            Location = "Lake Kyle",
                            Status = 0,
                            Title = "Unbranded Soft Chair",
                            Year = 2021
                        },
                        new
                        {
                            Id = 94,
                            Author = "Micah Dietrich",
                            ItemType = 1,
                            Location = "Lake Dayana",
                            Status = 0,
                            Title = "Handmade Wooden Mouse",
                            Year = 2023
                        },
                        new
                        {
                            Id = 95,
                            Author = "Buford Brakus",
                            ItemType = 0,
                            Location = "Kenyaberg",
                            Status = 0,
                            Title = "Ergonomic Granite Chicken",
                            Year = 2013
                        },
                        new
                        {
                            Id = 96,
                            Author = "Jamarcus Cremin",
                            ItemType = 2,
                            Location = "North Ardella",
                            Status = 0,
                            Title = "Unbranded Wooden Bike",
                            Year = 2016
                        },
                        new
                        {
                            Id = 97,
                            Author = "Marge Hilpert",
                            ItemType = 2,
                            Location = "Lake Lulu",
                            Status = 0,
                            Title = "Generic Concrete Fish",
                            Year = 2022
                        },
                        new
                        {
                            Id = 98,
                            Author = "Nicole McClure",
                            ItemType = 3,
                            Location = "South Elian",
                            Status = 0,
                            Title = "Incredible Frozen Fish",
                            Year = 2004
                        },
                        new
                        {
                            Id = 99,
                            Author = "Aglae Mann",
                            ItemType = 0,
                            Location = "McCulloughfort",
                            Status = 0,
                            Title = "Generic Plastic Pizza",
                            Year = 2006
                        },
                        new
                        {
                            Id = 100,
                            Author = "Bethany Maggio",
                            ItemType = 1,
                            Location = "Daretown",
                            Status = 0,
                            Title = "Intelligent Soft Salad",
                            Year = 2021
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("UserId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 97,
                            LoanDate = new DateTime(2022, 6, 28, 2, 43, 25, 166, DateTimeKind.Local).AddTicks(9300),
                            ReservationId = 2,
                            ReturnDate = new DateTime(2024, 6, 5, 6, 30, 25, 776, DateTimeKind.Local).AddTicks(4959),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 9,
                            LoanDate = new DateTime(2023, 5, 11, 6, 46, 16, 605, DateTimeKind.Local).AddTicks(7808),
                            ReservationId = 4,
                            ReturnDate = new DateTime(2023, 12, 26, 18, 20, 20, 855, DateTimeKind.Local).AddTicks(4426),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 49,
                            LoanDate = new DateTime(2023, 4, 24, 2, 43, 58, 901, DateTimeKind.Local).AddTicks(3397),
                            ReservationId = 5,
                            ReturnDate = new DateTime(2024, 4, 27, 12, 37, 51, 142, DateTimeKind.Local).AddTicks(5954),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 10,
                            LoanDate = new DateTime(2022, 10, 24, 10, 12, 5, 680, DateTimeKind.Local).AddTicks(3243),
                            ReservationId = 5,
                            ReturnDate = new DateTime(2024, 5, 2, 17, 38, 16, 445, DateTimeKind.Local).AddTicks(5403),
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 5,
                            LoanDate = new DateTime(2023, 5, 29, 8, 59, 35, 418, DateTimeKind.Local).AddTicks(9762),
                            ReservationId = 4,
                            ReturnDate = new DateTime(2023, 8, 7, 3, 51, 28, 391, DateTimeKind.Local).AddTicks(75),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Port Cory"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Lake Hadleyfurt"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Emmymouth"
                        },
                        new
                        {
                            Id = 4,
                            LocationName = "Lake Annabelleland"
                        },
                        new
                        {
                            Id = 5,
                            LocationName = "Laviniafort"
                        },
                        new
                        {
                            Id = 6,
                            LocationName = "New Xzavier"
                        },
                        new
                        {
                            Id = 7,
                            LocationName = "Laurenceberg"
                        },
                        new
                        {
                            Id = 8,
                            LocationName = "Port Catharine"
                        },
                        new
                        {
                            Id = 9,
                            LocationName = "Lavadatown"
                        },
                        new
                        {
                            Id = 10,
                            LocationName = "Armstrongmouth"
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 22,
                            ReservationDate = new DateTime(2022, 8, 11, 11, 28, 31, 998, DateTimeKind.Local).AddTicks(1804),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 80,
                            ReservationDate = new DateTime(2023, 5, 1, 19, 2, 27, 476, DateTimeKind.Local).AddTicks(2883),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 38,
                            ReservationDate = new DateTime(2023, 4, 27, 9, 21, 47, 63, DateTimeKind.Local).AddTicks(3522),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 97,
                            ReservationDate = new DateTime(2022, 11, 26, 12, 21, 46, 17, DateTimeKind.Local).AddTicks(5619),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 64,
                            ReservationDate = new DateTime(2023, 1, 27, 23, 16, 23, 27, DateTimeKind.Local).AddTicks(6568),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BiebWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSubscription")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaxItemsPerYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cee4b8bb-68e0-4c7e-a1bd-78fce199d780",
                            Email = "admin@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Administrator",
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGm82CMHMO+6+Sv0OqCo4D7QvhqUSVgcdjPmQecalfdmyLxyNt2mWIjQ/iE4jiV6Fg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d590ee4d-ee56-4e0a-b22f-f07fbdf69523",
                            SubscriptionType = "4",
                            TwoFactorEnabled = false,
                            Type = 2,
                            UserName = "admin@example.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "006272ea-2d3f-403d-8677-173e6022e314",
                            Email = "librarian@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Librarian",
                            NormalizedEmail = "LIBRARIAN@EXAMPLE.COM",
                            NormalizedUserName = "LIBRARIAN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBiNB2wcetoWKvVytkF3dl1FXln6i9xd/qtIN4eFe3u7XIU4nZw4AXyid0BLtAWfCw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "61e2f9e3-85fe-4aa3-99a6-20cad0eae310",
                            SubscriptionType = "3",
                            TwoFactorEnabled = false,
                            Type = 1,
                            UserName = "librarian@example.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b40f9c8f-3bce-4bfc-9572-61343d626bed",
                            Email = "member@example.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Member",
                            NormalizedEmail = "MEMBER@EXAMPLE.COM",
                            NormalizedUserName = "MEMBER@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGoVkaaeYhRofKHXw3jViTqpjRo3DLBWp5BisP6oKyZ288HO/tB7T/kY++cf/l3x6A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e0fedec2-33ef-402a-b765-7aa08d3e5510",
                            SubscriptionType = "2",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "member@example.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0c566db5-2951-4a0d-ae17-35255b2c9429",
                            Email = "June89@hotmail.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Loma Rippin",
                            NormalizedEmail = "MUSTAFA96@HOTMAIL.COM",
                            NormalizedUserName = "GREGG.HEANEY@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDSqk6WgewFYkKRtfOwsBy4YBu0E1N0qZQRB0ti1nUWacF7P3eKK+Ay6AUACMjPSAw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3a2fe1fc-d803-47be-8f7f-c26e4afbe5e3",
                            SubscriptionType = "1",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Elmore.Cronin@hotmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "12bab587-5f34-4296-a504-3d390df3c3fe",
                            Email = "Soledad_Mayer6@gmail.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Willis Kuphal",
                            NormalizedEmail = "THERESIA24@YAHOO.COM",
                            NormalizedUserName = "LEATHA.HUDSON73@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIBkXD7yeWTLxB67ohb5PHFKiO5fgC5PqwsCWpHc8TeoxK2esiRCzsAky9h63Dntvw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3ae2e3da-072c-49b4-aa35-a518065e14e7",
                            SubscriptionType = "3",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Chance.Haag@gmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2c0eb5e0-ddc0-4727-8305-88c48c97f4a9",
                            Email = "Annette.Purdy61@yahoo.com",
                            EmailConfirmed = true,
                            HasSubscription = false,
                            IsBlocked = false,
                            LockoutEnabled = true,
                            MaxItemsPerYear = 0,
                            Name = "Jaunita Thiel",
                            NormalizedEmail = "KRISTOFFER_DAMORE@YAHOO.COM",
                            NormalizedUserName = "MOZELLE.KOCH@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEF0io6o0Yhk002g2QEyc25b2xhQ0pO4q+H+GZFZSPDOcs3V5uC8rtYVgNM4prTENPw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2c5f4a5e-1e26-4825-9bdd-b7ba32a3e17f",
                            SubscriptionType = "4",
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "Gertrude_Keeling@hotmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BiebWebApp.Models.Invoice", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Loan", b =>
                {
                    b.HasOne("BiebWebApp.Models.Item", "Item")
                        .WithMany("Loans")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.Reservation", "Reservation")
                        .WithMany("Loans")
                        .HasForeignKey("ReservationId");

                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Reservation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Payment", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.HasOne("BiebWebApp.Models.Item", "Item")
                        .WithMany("Reservations")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BiebWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BiebWebApp.Models.Item", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BiebWebApp.Models.Reservation", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("BiebWebApp.Models.User", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("Payments");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
