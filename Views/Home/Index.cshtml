@model List<Item>

@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - BiebWebApp</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-DmY81eYEhaI6FYdMUe0Iy1fDHTJvScbLytlx4xk8fOTPHh4+EaU4w+quDk9t4W2J" crossorigin="anonymous">
    <style>
        .extra-info {
            display: none;
        }

            .extra-info.show {
                display: table-row;
            }

        .details {
            padding: 10px;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>

    @if (User.Identity.IsAuthenticated)
    {
        <div class="text-center">
            <h1 class="display-4">Welcome <span id="username">@User.Identity.Name</span></h1>
            <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
        </div>

        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success">
                @TempData["Message"]
            </div>
        }
    }
    else
    {
        <div class="text-center">
            <h1 class="display-4">Welcome, please log in</h1>
            <p>
                <a href="@Url.Action("Login", "Home")">Login</a> or
                <a href="@Url.Action("Register", "Home")">Register</a>
            </p>
        </div>
    }

    <h2>Items</h2>

    <div class="dropdown mb-3">
        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="filterDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Filter
        </button>
        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="filterDropdown">
            <a class="dropdown-item" href="@Url.Action("Index", "Home", new { filter = "" })">All</a>
            <div class="dropdown-divider"></div>
            <h6 class="dropdown-header">Location</h6>
            <a class="dropdown-item" href="@Url.Action("Index", "Home", new { filter = "Library" })">Library</a>
            <a class="dropdown-item" href="@Url.Action("Index", "Home", new { filter = "Shelf A" })">Shelf A</a>
            <!-- Add more options for other locations -->
            <div class="dropdown-divider"></div>
            <h6 class="dropdown-header">Type</h6>
            <a class="dropdown-item" href="@Url.Action("Index", "Home", new { filter = "Book" })">Book</a>
            <a class="dropdown-item" href="@Url.Action("Index", "Home", new { filter = "Magazine" })">Magazine</a>
            <a class="dropdown-item" href="@Url.Action("Index", "Home", new { filter = "Newspaper" })">Newspaper</a>
            <a class="dropdown-item" href="@Url.Action("Index", "Home", new { filter = "DVD" })">DVD</a>
            <!-- Add more options for other item types -->
        </div>
    </div>

    <div class="input-group mb-3" style="margin-bottom: 0;">
        <div class="input-group-prepend">
            <span class="input-group-text">Filter by author:</span>
        </div>
        <input type="text" class="form-control form-control-sm" placeholder="Author" name="authorFilter" id="authorFilterInput">
        <div class="input-group-prepend">
            <span class="input-group-text">Filter by year:</span>
        </div>
        <input type="number" class="form-control form-control-sm" placeholder="Year" name="yearFilter" id="yearFilterInput">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="button" id="filterBtn">Apply Filters</button>
        </div>
    </div>

    <form method="get" action="@Url.Action("Index", "Home")">
        <div class="input-group mb-3">
            <input type="text" class="form-control font-weight-bold" placeholder="Search items..." name="searchString" value="@ViewData["searchString"]">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="submit">Search</button>
            </div>
        </div>
    </form>

    @if (Model != null && Model.Count > 0)
    {
        <h3>Search Results</h3>

        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Author</th>
                    <th>Type</th>
                    <th>Year</th>
                    <th>Location</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Title</td>
                        <td>@item.Author</td>
                        <td>@item.ItemType</td>
                        <td>@item.Year</td>
                        <td>@item.Location</td>
                        <td>
@*                        <!-- Show the "Reserve" button only for authenticated members --> *@ 
                       @if (User.Identity.IsAuthenticated && User.IsInRole("Member"))
{
    <a class="btn btn-primary btn-sm" href="@Url.Action("Reserve", "Items")?itemId=@item.Id">Reserve</a>
}
                    </td>
                    </tr>
                    <tr class="extra-info">
                        <td colspan="6">
                            <div class="details">
                                <p>Extra information about the item</p>
                                <!-- Add extra information about the item here -->
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No items found.</p>
    }

    <script src="https://code.jquery.com/jquery-3.6.0.min.js" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js" crossorigin="anonymous"></script>

    <script>
        $(document).ready(function () {
            $('.dropdown-toggle').dropdown();

            $('.dropdown').on('show.bs.dropdown', function (e) {
                $(this).find('.dropdown-menu').first().stop(true, true).slideDown();
            });

            $('.dropdown').on('hide.bs.dropdown', function (e) {
                $(this).find('.dropdown-menu').first().stop(true, true).slideUp();
            });

            var rows = document.querySelectorAll('.table tr');

            rows.forEach(function (row) {
                row.addEventListener('click', function () {
                    var nextRow = row.nextElementSibling;

                    if (nextRow.classList.contains('extra-info')) {
                        nextRow.classList.toggle('show');
                    }
                });
            });

            // Apply filter button click event
            $('#filterBtn').click(function () {
                var authorFilter = $('#authorFilterInput').val().trim();
                var yearFilter = $('#yearFilterInput').val().trim();
                var currentUrl = new URL(window.location.href);

                if (authorFilter !== '') {
                    currentUrl.searchParams.set('author', authorFilter);
                } else {
                    currentUrl.searchParams.delete('author');
                }

                if (yearFilter !== '') {
                    currentUrl.searchParams.set('year', yearFilter);
                } else {
                    currentUrl.searchParams.delete('year');
                }

                window.location.href = currentUrl.href;
            });
        });
    </script>

</body>
</html>
